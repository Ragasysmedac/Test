#pragma checksum "D:\Abinesh-learn\XAutomateMVC\XAutomateMVC\Views\DbConfigController1\DbConfig.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9438936c38bfbca0c6111ba3d1806d6b6d00d159"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DbConfigController1_DbConfig), @"mvc.1.0.view", @"/Views/DbConfigController1/DbConfig.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Abinesh-learn\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Abinesh-learn\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9438936c38bfbca0c6111ba3d1806d6b6d00d159", @"/Views/DbConfigController1/DbConfig.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b3eb3a5bd4bb195597699a36c34031f9ee5ad7c0", @"/Views/_ViewImports.cshtml")]
    public class Views_DbConfigController1_DbConfig : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ProductViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\Abinesh-learn\XAutomateMVC\XAutomateMVC\Views\DbConfigController1\DbConfig.cshtml"
  
    ViewData["Title"] = "DbConfig";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>DbConfig</h1>




<!-- Bootstrap CSS CDN -->
<link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"" integrity=""sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4"" crossorigin=""anonymous"">

<script defer src=""https://use.fontawesome.com/releases/v5.0.13/js/solid.js"" integrity=""sha384-tzzSw1/Vo+0N5UhStP3bvwWPq+uvzCMfrN1fEFe+xBmv1C/AtVX5K0uZtmcHitFZ"" crossorigin=""anonymous""></script>
<script defer src=""https://use.fontawesome.com/releases/v5.0.13/js/fontawesome.js"" integrity=""sha384-6OIrr52G08NpOFSZdxxz1xdNSndlD4vdcf/q2myIUVO0VsqaGHJsB0RaBE01VTOY"" crossorigin=""anonymous""></script>

<!-- jQuery CDN - Slim version (=without AJAX) -->
<script src=""https://code.jquery.com/jquery-3.3.1.slim.min.js"" integrity=""sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"" crossorigin=""anonymous""></script>
<!-- Popper.JS -->
<script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"" integrity=");
            WriteLiteral(@"""sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ"" crossorigin=""anonymous""></script>
<!-- Bootstrap JS -->
<script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"" integrity=""sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm"" crossorigin=""anonymous""></script>
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js""></script>
<!DOCTYPE html>
<html>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9438936c38bfbca0c6111ba3d1806d6b6d00d1595605", async() => {
                WriteLiteral(@"

    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <style>
        body {
            margin: 0;
            font-family: ""Lato"", sans-serif;
        }

        thead {
            background-color: gray;
            color: white;
        }

        tr {
            height: 26px;
            text-align: center;
        }

        .bttn-save {
            background-color: #38C3FA !important;
            color: white;
            font-weight: bold;
            border-radius: 8px;
            border: none;
            min-width: 100px;
            padding: 10px;
        }



        .bttn-clear {
            background-color: #CECECE !important;
            color: black;
            border-radius: 8px;
            font-weight: bold;
            border: none;
            min-width: 100px;
            padding: 10px;
        }




        .sidebar {
            margin: 0;
            padding: 0;
            width: 200px;
            back");
                WriteLiteral(@"ground-color: #f1f1f1;
            position: fixed;
            height: 100%;
            overflow: auto;
        }

            .sidebar a {
                display: block;
                color: black;
                padding: 16px;
                text-decoration: none;
            }

        div.content {
            margin-left: 200px;
            padding: 1px 16px;
            height: 1000px;
        }

        .sidenav {
            height: 100%;
            width: 200px;
            position: fixed;
            z-index: 1;
            top: 0;
            left: 0;
            background-color: #111;
            overflow-x: hidden;
            padding-top: 20px;
        }

            /* Style the sidenav links and the dropdown button */
            .sidenav a, .dropdown-btn {
                padding: 6px 8px 6px 16px;
                text-decoration: none;
                font-size: 20px;
                color: #818181;
                display: block;
             ");
                WriteLiteral(@"   border: none;
                background: none;
                width: 100%;
                text-align: left;
                cursor: pointer;
                outline: none;
            }

        /* On mouse-over */


        /* Main content */
        .main {
            margin-left: 200px; /* Same as the width of the sidenav */
            font-size: 20px; /* Increased text to enable scrolling */
            padding: 0px 10px;
        }

        /* Add an active class to the active dropdown button */

        /* Dropdown container (hidden by default). Optional: add a lighter background color and some left padding to change the design of the dropdown content */
        .dropdown-container {
            display: none;
            padding-left: 31px;
        }

        /* Optional: Style the caret down icon */
        .fa-caret-down {
            float: right;
            padding-right: 8px;
        }
    </style>
    <script>
        /* Loop through all dropdown buttons t");
                WriteLiteral(@"o toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */
        var dropdown = document.getElementsByClassName(""dropdown-btn"");
        var i;

        for (i = 0; i < dropdown.length; i++) {
            dropdown[i].addEventListener(""click"", function () {
                this.classList.toggle(""active"");
                var dropdownContent = this.nextElementSibling;
                if (dropdownContent.style.display === ""block"") {
                    dropdownContent.style.display = ""none"";
                } else {
                    dropdownContent.style.display = ""block"";
                }
            });
        }

        $(document).ready(function ($) {


            $(""#update"").addClass(""hidden"");


            $(document).on(""click"", ""#Save"", function () {
                debugger;

               
                var Name = $(""#dbName"").val();
                if (Name == null && Name == """" && Name == u");
                WriteLiteral(@"ndefined) {
                    alert(""Please Enter DB Name"");
                    return false;
                }
                var DemoName = $(""#Dbhost"").val();
                if (DemoName == null && DemoName == """" && DemoName == undefined) {
                    alert(""Please Enter Host Name"");
                    return false;
                }
                var DbPortname = $(""#dbPort"").val();
                if (DbPortname == null && DbPortname == """" && DbPortname == undefined) {
                    alert(""Please Enter Database Port Number"");
                    return false;
                }
                var UserName = $(""#dbusernaem"").val();
                if (UserName == null && UserName == """" && UserName == undefined) {
                    alert(""please Enter Database User Name"")
                }
                var Password = $(""#TestResult"").val();
                if (Password == null && Password == """" && Password == undefined) {
                    alert(""please Ent");
                WriteLiteral(@"er Database Password"")
                }

                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/DbConfig/SaveGrid"", // Controller/View
                        datatype: ""json"",
                        data: {
                           
                            Dbname: Name,
                            Dbhost: DemoName,
                            DbPortname: DbPortname,
                            Dbuser: UserName,
                            DbPassword: Password,

                        },
                        success: function (data) {
                            debugger;
                            $(""#Dbhost"").val('');
                            $(""#dbName"").val('');
                            $(""#dbPort"").val('');
                            $(""#TestResult"").val('');

                            $(""#dbusernaem"").val('');
                            alert(""Connection Successfully"");
        ");
                WriteLiteral(@"                    Bindrid();
                        },
                        error: function (Result) {

                        }

                    });
            });

            Bindrid();
            function Bindrid() {
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/DbConfig/BindGrid"", // Controller/View
                        datatype: ""json"",

                        success: function (data) {
                            debugger;
                            $('#tblAuthgrid').empty();
                            var tr;
                            if (data.length > 0) {
                                for (var i = 0; i < data.length; i++) {

                                    tr = $('<tr/>');
                                    tr.append(""<td>"" + data[i].dbHostName + ""</td>"");
                                    tr.append(""<td>"" + data[i].dbName + ""</td>"");
                       ");
                WriteLiteral(@"             tr.append(""<td>"" + data[i].dbPort + ""</td>"");
                                    tr.append(""<td>"" + data[i].dbUser + ""</td>"");
                                    tr.append(""<td>"" + data[i].dbPassword + ""</td>"");
                                    tr.append(""<td>Active</td>"");
                                    $('#tblAuthgrid').append(tr);
                                }
                            }

                        },
                        error: function (Result) {

                        }

                    });
            }

        });
        $(document).ready(function () {
            debugger;
            var datalist = sessionStorage.getItem(""Role"");

            if (datalist != ""Admin"") {
                $("".Admin"").addClass(""hidden"");
            }
            else {
                $("".Admin"").removeClass(""hidden"");
            }
        });
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9438936c38bfbca0c6111ba3d1806d6b6d00d15915049", async() => {
                WriteLiteral(@"


    <div class=""content"">
        .<div class="" container-scroller"">

            <div class=""container-fluid page-body-wrapper"">

                <div class=""main-panel"">
                    <div class=""content-wrapper"" style=""padding: 1.5rem .8rem .5rem 2rem;"">
                        <div class=""page-header"">
                            <h2 class=""page-title text-primary"">Connection</h2>
                        </div>

                        <div class=""form"">
                            <div class=""row"" style=""padding-bottom: 20px;"">
");
                WriteLiteral(@"                                <div class=""col-lg-3"" style=""text-align: left;"">
                                    <label>DB Name</label><span style=""color: red;"">*</span><br />
                                    <input type=""text"" id=""dbName"" name=""Name"" class=""txt-input"" />
                                </div>

                            </div>
                            <div class=""row"" style=""padding-bottom: 20px;"">
                                <div class=""col-lg-3"">
                                    <label>DB Host</label><br />
                                    <input type=""text"" id=""Dbhost"" name=""Testcases"" class=""txt-input"" />
                                </div>
                                <div class=""col-lg-3"">
                                    <label>DB Port</label><br />
                                    <input type=""text"" id=""dbPort"" name=""testdata"" class=""txt-input"" />
                                </div>
                            </div>

             ");
                WriteLiteral(@"               <div class=""row"" style=""padding-bottom: 20px;"">
                                <div class=""col-lg-3"">
                                    <label>DB UserName</label><br />
                                    <input type=""text"" id=""dbusernaem"" name=""testdata"" class=""txt-input"" />
                                </div>
                                <div class=""col-lg-3"">
                                    <label>DB Password</label><br />
                                    <input type=""text"" id=""TestResult"" name=""testresult"" class=""txt-input"" />
                                </div>
                            </div>

                            <div class=""row"">
                                <div class=""col-lg-5"" style=""padding-top:1em;"">
                                    <label>Description</label> <br />
                                    <textarea cols=""40"" rows=""3"" id=""Description"" [(ngModel)]=""Description"" class=""txt-input""></textarea>
                                ");
                WriteLiteral(@"</div>
                                <div class=""col-lg-3"" style=""padding-top: 4rem;"">
                                    <input type=""checkbox"" id=""Status"" [(ngModel)]=""Status""> Set As active
                                </div>
                                <div class=""col-lg-4"" style=""padding-top: 4rem;"">
                                    <button class=""bttn-save "" id=""Save"">SAVE</button> &nbsp;&nbsp;
                                    <button class=""bttn-Update"" id=""update"">Update</button>&nbsp;&nbsp;
                                    <button class=""bttn-clear"" (click)=""ClearPort()"">Clear</button>
                                </div>
                            </div>


                        </div>
                    </div>


                </div>
            </div>
            <div>
                <input type=""text"" disabled id=""Testrule"" class=""hidden"" />
            </div>

        </div>
        <div class=""content-wrapper"">

            <div class=""row"">
 ");
                WriteLiteral(@"               <div class=""col-lg-12 grid-margin"">
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""row"">
                                <div class=""col-12 grid-margin"">
                                    <div class=""card"">
                                        <div class=""card-body"" style=""padding: 0;"">
                                            <div class=""col-lg-12 form-inline""
                                                 style=""border: 1px solid #9c9fa6; padding: 5px;background-color: #f0f0f1"">
                                                <div class=""col-lg-4""></div>
                                                <div class=""col-lg-8 "" style=""padding-right:0px;"">
                                                    <div class=""form-group"" style=""padding-left:55%;"">
                                                        <div class=""input-group"">
                                                           ");
                WriteLiteral(" <!-- <label style=\"padding-right: 25px;\">Search</label> -->\r\n                                                            <select class=\"form-control\">\r\n                                                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9438936c38bfbca0c6111ba3d1806d6b6d00d15920537", async() => {
                    WriteLiteral("Search By");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                            </select>
                                                            <!-- <input type=""text"" class=""form-control""
                                                                placeholder=""Search..."" aria-label=""Search...""
                                                                aria-describedby=""basic-addon2"">
                                                            <div class=""input-group-append"">
                                                                <button class=""btn btn-sm btn-gradient-danger""
                                                                    type=""button"">Search</button>
                                                            </div> -->
                                                        </div>
                                                        <button type=""button"" class=""btn btn-sm "">
                                                            <img src=""../../assets/ExportPDF.p");
                WriteLiteral(@"ng"" />
                                                        </button>
                                                        <button type=""button"" class=""btn  btn-sm"">
                                                            <img src=""../../assets/ExportExcel.png""
                                                                 (click)=""exportexcel()"" style=""cursor: pointer;"" />
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>


                                            <div class=""col-sm-12 mat-elevation-z8""
                                                 style=""box-shadow: unset;padding: 0px ;"" #TABLE>
                                                <table style=""width: 100%;"" border=""1"">
                                                    <thead>
                                                        <");
                WriteLiteral(@"tr>
                                                          
                                                            <td>
                                                                Host Name
                                                            </td>
                                                            <td>
                                                                DB Name
                                                            </td>
                                                            <td>
                                                                DB Port
                                                            </td>
                                                            <td>
                                                                DB User
                                                            </td>
                                                            <td>
                                                                DB ");
                WriteLiteral(@"Password

                                                            </td>
                                                            <td>
                                                                Status
                                                            </td>
                                                        </tr>
                                                    </thead>
                                                    <tbody id=""tblAuthgrid""></tbody>

                                                </table>

                                            </div>



                                        </div>

                                    </div>
                                </div>
                                <div class=""col-lg-4""></div>
                                <div class=""col-lg-4""></div>
                                <div class=""col-lg-4"">
                                    <!-- <p class=""text-primary"" style=""float:right""><i>
     ");
                WriteLiteral(@"                               &nbsp;</i>Page 1,2,3,4<i>&nbsp;></i></p> -->
                                </div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <!-- partial:../../partials/_footer.html -->

    </div>
    </div>
    </div>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ProductViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
