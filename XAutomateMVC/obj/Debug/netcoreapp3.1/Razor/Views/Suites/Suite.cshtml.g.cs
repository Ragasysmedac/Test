#pragma checksum "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Suites\Suite.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b5ff334d78ea2c5574d0c2e9bbc95133d03b5544"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Suites_Suite), @"mvc.1.0.view", @"/Views/Suites/Suite.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b5ff334d78ea2c5574d0c2e9bbc95133d03b5544", @"/Views/Suites/Suite.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b3eb3a5bd4bb195597699a36c34031f9ee5ad7c0", @"/Views/_ViewImports.cshtml")]
    public class Views_Suites_Suite : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ProductViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control chosen chosen-select"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("multiple", new global::Microsoft.AspNetCore.Html.HtmlString("true"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formid"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/ExportExcel.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("cursor: pointer;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Suites\Suite.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b5ff334d78ea2c5574d0c2e9bbc95133d03b55446437", async() => {
                WriteLiteral(@"

    <style>
        .dropdown1-container {
            display: block !important;
        }
    </style>
    <script>



        $(document).ready(function () {
            debugger;
            $(""#Status"").prop(""checked"", true);
            $(document).on(""click"", ""#SuiteSave"", function () {
                $(""#Error"").html('');
                $(""#Success"").html('');
                var Active = 1;
                // var TSuiteName = $(""#TestsuidId"").val();

                var TSuiteName = """";
                var TSuiteName1 = $(""#TestsuidId"").val();
                for (var i = 0; i < TSuiteName1.length; i++) {
                    if (TSuiteName == """") {
                        TSuiteName = TSuiteName1[i];
                    }
                    else {
                        TSuiteName += "","" + TSuiteName1[i];
                    }
                }
                if (TSuiteName == """" || TSuiteName == null || TSuiteName == ""undefined"" || TSuiteName == undefined) {
   ");
                WriteLiteral(@"                 $(""#Error"").html(""Please Select Test Suite Name"");
                    return false;
                }
                var SuiteName = $(""#SName"").val();

                if (SuiteName == """" || SuiteName == null || SuiteName == ""undefined"" || SuiteName == undefined) {
                    $(""#Error"").html(""Please Enter Test Approach Name"");
                    return false;
                }
                var inValid = /\s/;
                if ((inValid.test(SuiteName))) {

                    $(""#Error"").html('Test Approach Should not Contain Whitespace');
                    return false;
                }
                //var DbName = $(""#ProductId"").val();
                //if (DbName == """" || DbName == null || DbName == ""undefined"" || DbName == undefined) {
                //    $(""#Error"").html(""Please Select Connection Name"");
                //    return false;
                //}
                if ($('#Status').is(':checked')) {
                    Active = 1;");
                WriteLiteral(@"
                }
                else {
                    $(""#Error"").html(""Please Check Active Check box"");
                }
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Suites/SaveSuite"", // Controller/View
                        datatype: ""json"",
                        data: { SName: SuiteName, testsuite: TSuiteName, Active: Active },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            var result = data;
                            if (data == ""Fail"") {
                                $(""#Success"").html(""Already Test Approach  Exits"")
                                return false;
                            }
                            else if (data == ""Auth Fail"") {
       ");
                WriteLiteral(@"                         $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            else {
                                $(""#Success"").html(""Test Approach Successfully Saved"");
                            }
                            // $(""#ProductId"").val("""");
                            $(""#SName"").val("""");
                            $(""#TestsuidId"").val("""");
                            $(""#TestsuidId"").trigger(""chosen:updated"");
                            $('.chosen').chosen(""destroy"").chosen();
                            debugger; BindGrid1(1);
                        },
                        error: function (Result) {
                        }

                    });
            });

            function clear() {
                $(""#ProductId"").val("""");
                $(""#SName"").val("""");
                $(""#TestsuidId"").val("""");
                $(""#Status"").prop(""");
                WriteLiteral(@"checked"", true);
                $(""#update"").addClass(""hidden"");
                $(""#SuiteSave"").removeClass(""hidden"");
                $(""#Error"").html('');
                $(""#Success"").html('');
                $(""#suitesave"").html("""");
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#suitestatus"").val(""1"");
                $(""#TestsuidId"").trigger(""chosen:updated"");
                $('.chosen').chosen(""destroy"").chosen();
                var table = document.getElementById('example1');
                var cells = table.getElementsByTagName('td');
                for (var i = 0; i < cells.length; i++) {
                    var rowsNotSelected = table.getElementsByTagName('tr');
                    for (var row = 0; row < rowsNotSelected.length; row++) {
                        rowsNotSelected[row].style.backgroundColor = """";
                        rowsNotSelected[row].classList.remove('highlight');
               ");
                WriteLiteral(@"     }
                }

            }

            $(document).on(""click"", ""#clear"", function () {
                clear();
            });

            $(document).on(""click"", ""#update"", function () {
                debugger;
                var Active = 1;
                var TSuiteName = """";
                var TSuiteName1 = $(""#TestsuidId"").val();
                for (var i = 0; i < TSuiteName1.length; i++) {
                    if (TSuiteName == """") {
                        TSuiteName = TSuiteName1[i];
                    }
                    else {
                        TSuiteName += "","" + TSuiteName1[i];
                    }
                }
                if (TSuiteName == """" || TSuiteName == null || TSuiteName == ""undefined"" || TSuiteName == undefined) {
                    $(""#Error"").html(""Please Select Test Suite Name"");
                    return false;
                }
                var SuiteName = $(""#SName"").val();

                if (SuiteName == """" |");
                WriteLiteral(@"| SuiteName == null || SuiteName == ""undefined"" || SuiteName == undefined) {
                    $(""#Error"").html(""Please Enter Test Approach Name"");
                    return false;
                }
                var inValid = /\s/;
                if ((inValid.test(SuiteName))) {

                    $(""#Error"").html('Test Approach Should not Contain Whitespace');
                    return false;
                }
                //var DbName = $(""#ProductId"").val();
                //if (DbName == """" || DbName == null || DbName == ""undefined"" || DbName == undefined) {
                //    $(""#Error"").html(""Please Select Connection Name"");
                //    return false;
                //}
                var TestapproachId = $(""#suitesave1"").val();
                if ($('#Status').is(':checked')) {
                    Active = 1;
                }
                else {
                    Active = 0;
                }
                $.ajax(
                    {
       ");
                WriteLiteral(@"                 type: ""GET"", //HTTP POST Method
                        url: ""/Suites/UpdateTestApproach"", // Controller/View
                        datatype: ""json"",
                        data: { testId: TestapproachId, SName: TSuiteName, testapproachname: SuiteName, Active: Active },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            var result = data;
                            if (data == ""Success"") {
                                $(""#Success"").html(""Test Approach Updated Successfully"");

                            }
                            else if (data == ""Validate"") {

                                $(""#Error"").html('Please ""Set As InActive"" ETLDB,ETL Rules for this Test Approach');
                                return false;
                           ");
                WriteLiteral(@" }
                            else if (data == ""Auth Fail"") {

                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            else {
                                $(""#Success"").html(""Test Approach Update Failed"");
                                return false;
                            }
                            var SuiteName = $(""#suitesave1"").val("""");

                            debugger;
                            $(""#update"").addClass(""hidden"");
                            $(""#SuiteSave"").removeClass(""hidden"");
                            $(""#Status"").prop(""checked"", true);
                            $(""#SName"").val("""");
                            //   $(""#ProductId"").val("""");
                            $(""#TestsuidId"").val("""");
                            $(""#TestsuidId"").trigger(""chosen:updated"");
                            $('.chosen').");
                WriteLiteral(@"chosen(""destroy"").chosen();

                            BindGrid1(1);
                        },
                        error: function (Result) {
                        }

                    });
            });

            BindGrid(1);
            $(""#suitestatus"").val(""1"");
        });
        $(document).ready(function () {
            var dropdown = document.getElementsByClassName(""dropdown-btn"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }


            $(document).on(""click"", ""#e");
                WriteLiteral(@"xcel"", function () {
                var uri = 'data:application/vnd.ms-excel;base64,'
                    , template = '<html xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:x=""urn:schemas-microsoft-com:office:excel"" xmlns=""http://www.w3.org/TR/REC-html40""><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
                    , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
                    , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }

                var table = document.getElementById(""example1"");
                //var example1 = $('.example1');

                //var filters = $('.ng-table-filters').remove();
                var ctx = { worksheet: name || 'Works");
                WriteLiteral(@"heet', table: table.innerHTML };
                //$('.ng-table-sort-header').after(filters);
                var url = uri + base64(format(template, ctx));
                var a = document.createElement('a');
                a.href = url;

                //var today = new Date();
                //var date = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();

                a.download = 'TestApproach.xls';
                a.click();
            });
            var dropdown = document.getElementsByClassName(""dropdown-btn1"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownConten");
                WriteLiteral(@"t.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }
            var dropdown = document.getElementsByClassName(""dropdown-btn2"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }
            $('#formid').on('keyup keypress', function (e) {
                var keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
             ");
                WriteLiteral(@"       return false;
                }
            });

        });

        function display(a, approachid) {
            //    $('.chosen').chosen(""destroy"").chosen();
            $(""#Error"").html("""");
            $(""#Success"").html("""");
            $(""#update"").removeClass(""hidden"");
            $(""#SuiteSave"").addClass(""hidden"");
            var table = document.getElementById('example1');
            var cells = table.getElementsByTagName('td');
            for (var i = 0; i < cells.length; i++) {
                var rowsNotSelected = table.getElementsByTagName('tr');
                for (var row = 0; row < rowsNotSelected.length; row++) {
                    rowsNotSelected[row].style.backgroundColor = """";
                    rowsNotSelected[row].classList.remove('highlight');
                }
            }
            a.parentNode.classList.add(""highlight"");
            debugger;
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
       ");
                WriteLiteral(@"             url: ""/Suites/EditApproachvalue"", // Controller/View
                    datatype: ""json"",
                    data: { ApproachId: approachid },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        var result = data;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        var testid = """";
                        var suitelentgth = data[""0""].testSuiteId;
                        if (suitelentgth != """") {
                            testid = data[""0""].testSuiteId.split("","");

                        }


                        $(""#suitesave1"").val(data[""0""].testApproachid);
                        $(""#TestsuidId");
                WriteLiteral(@""").val(testid).trigger('chosen:updated');
                        $('#TestsuidId').trigger('liszt:updated');
                        $(""#SName"").val(data[""0""].testApproachName);
                        //   $(""#ProductId"").val(data[""0""].connectionname);
                        var status = data[""0""].status;
                        if (status == ""1"") {
                            $(""#Status"").prop(""checked"", true);
                        }
                        else {
                            $(""#Status"").prop(""checked"", false);
                        }
                        debugger;

                    },
                    error: function (Result) {
                    }

                });
        }
        function BindGrid(Active) {
            debugger;

            if (Active == ""1"") {
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#suitestatus"").val(""1"");
            }
            else {
");
                WriteLiteral(@"                $(""#InActive"").addClass(""hidden"");
                $(""#Active"").removeClass(""hidden"");
                $(""#suitestatus"").val(""0"");
            }
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Suites/SuiteBidGrid"", // Controller/View
                    datatype: ""json"",
                    data: { Active: Active, pageIndex: 1 },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $('#tblAuthgrid').empty();
                        var tr;
                        if (data.length > 0) {


                 ");
                WriteLiteral(@"           debugger;





                            var model = data;
                            var row = $(""#tblAuthgrid tr:last-child"").removeAttr(""style"").clone(true);
                            $(""#tblAuthgrid tr"").not($(""#tblAuthgrid tr:first-child"")).remove();
                            for (var i = 0; i < data.length; i++) {

                                tr = $('<tr/>');
                                tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")' style='    cursor: pointer;'>"" + data[i].testApproachid + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")' style='    cursor: pointer;'>"" + data[i].testSuitename + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")'  style='    cursor: pointer;'>"" + data[i].testApproachName + ""</td>"");
                                //tr.append(""<td OnClick='display(this,"" + data[i].testApproachid + "")' ");
                WriteLiteral(@"style='    cursor: pointer;'>"" + data[i].connectionname + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")'  style='    cursor: pointer;'>"" + data[i].createdDate + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")'  style='    cursor: pointer;'>"" + data[i].status + ""</td>"");
                                tr.append(""<td> <span  OnClick='deletefun("" + data[i].testApproachid + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http://40.115.111.12:5000/Image/delete-trash-icon-256.png' style='height:25px' />"" : """") + "" </span></td>"");
                                $('#tblAuthgrid').append(tr);
                            }













                            $('#example1').DataTable({
                                paging: true,
                                scrollX: true,
                                lengthChange: true,
   ");
                WriteLiteral(@"                             searching: true,
                                ordering: false
                            });
















                            //for (var i = 0; i < data.length; i++) {

                            //    tr = $('<tr/>');
                            //    tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")' style='    cursor: pointer;'>"" + data[i].testSuitename + ""</td>"");
                            //    tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")'  style='    cursor: pointer;'>"" + data[i].testApproachName + ""</td>"");
                            //    tr.append(""<td OnClick='display(this,"" + data[i].testApproachid + "")' style='    cursor: pointer;'>"" + data[i].connectionname + ""</td>"");
                            //    tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")'  style='    cursor: pointer;'>"" + data[i].createdDate + ""</td>"");
                            //    tr.append");
                WriteLiteral(@"(""<td  OnClick='display(this,"" + data[i].testApproachid + "")'  style='    cursor: pointer;'>"" + data[i].status + ""</td>"");
                            //    $('#tblAuthgrid').append(tr);
                            //}
                        }
                        debugger;
                    },
                    error: function (Result) {
                        debugger;
                    }

                });
        }

        function BindGrid1(Active) {
            debugger;

            if (Active == ""1"") {
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#suitestatus"").val(""1"");
            }
            else {
                $(""#InActive"").addClass(""hidden"");
                $(""#Active"").removeClass(""hidden"");
                $(""#suitestatus"").val(""0"");
            }
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Suites/");
                WriteLiteral(@"SuiteBidGrid"", // Controller/View
                    datatype: ""json"",
                    data: { Active: Active, pageIndex: 1 },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $('#tblAuthgrid').empty();
                        var tr;
                        if (data.length > 0) {
                            var model = data;
                            var row = $(""#tblAuthgrid tr:last-child"").removeAttr(""style"").clone(true);
                            $(""#tblAuthgrid tr"").not($(""#tblAuthgrid tr:first-child"")).remove();
                            for (var i = 0; i < data.length; i++");
                WriteLiteral(@") {

                                tr = $('<tr/>');
                                tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")' style='    cursor: pointer;'>"" + data[i].testApproachid + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")' style='    cursor: pointer;'>"" + data[i].testSuitename + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")'  style='    cursor: pointer;'>"" + data[i].testApproachName + ""</td>"");
                                //  tr.append(""<td OnClick='display(this,"" + data[i].testApproachid + "")' style='    cursor: pointer;'>"" + data[i].connectionname + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")'  style='    cursor: pointer;'>"" + data[i].createdDate + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testApproachid + "")'  ");
                WriteLiteral(@"style='    cursor: pointer;'>"" + data[i].status + ""</td>"");
                                tr.append(""<td> <span  OnClick='deletefun("" + data[i].testApproachid + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http://40.115.111.12:5000/Image/delete-trash-icon-256.png' style='height:25px' />"" : """") + "" </span></td>"");
                                $('#tblAuthgrid').append(tr);
                            }
                        }
                        debugger;
                    },
                    error: function (Result) {
                        debugger;
                    }

                });
        }

        function deletefun(testapid) {
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Suites/deleteapproach"", // Controller/View
                    datatype: ""json"",
                    data: { testApproachid: testapid },
                    headers: {
                ");
                WriteLiteral(@"        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        debugger;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed"");
                            return false;
                        }

                        BindGrid1(1);
                    },
                    error: function (Result) {

                    }

                });
        }
        $(document).ready(function () {

        });
        $(document).ready(function () {
            debugger;
            $(""#TestsuidId"").trigger(""chosen:updated"");

            $('.chosen').chosen(""destroy"").chosen();
            //    $("".chosen"").chosen();

        });

    </script>
    <div>



        <h3 style=""        color: #ba9122; padding: 14px; margin-left: 42px;"">Test Approach</h3>
        <div class=""");
                WriteLiteral(@"container"" style="" background-color: white;  padding-bottom: unset;"">
            <div class="" container-scroller"">

                <div class=""container-fluid page-body-wrapper"">

                    <div class=""main-panel"">
                        <div class=""content-wrapper"" style=""padding: 1.5rem .8rem .5rem 2rem;"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b5ff334d78ea2c5574d0c2e9bbc95133d03b554434208", async() => {
                    WriteLiteral(@"
                                <div class=""form"">
                                    <div class=""row"" style=""padding-bottom: 20px;"">
                                        <div class=""col-lg-3 col-md-3 col-xs-3 col-sm-3"" style=""text-align: left;"">
                                            <label><span style=""color: red;"">* </span>Test Suite</label><br />

                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b5ff334d78ea2c5574d0c2e9bbc95133d03b554434898", async() => {
                        WriteLiteral("\r\n                                            ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 589 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Suites\Suite.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.TestsuidId);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
#nullable restore
#line 591 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Suites\Suite.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(Model.TestSuiteList,"Value", "Text"));

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                        </div>

                                        <div class=""col-lg-3 col-md-3 col-xs-3 col-sm-3"" style=""text-align: left;"">
                                            <label><span style=""color: red;"">* </span>Test Approach</label><br />
                                            <input type=""text"" id=""SName"" name=""Name"" maxlength=""50"" class=""txt-input form-control"" />
                                        </div>
");
                    WriteLiteral("\r\n                                    </div>\r\n\r\n                                </div>\r\n                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </div>


                    </div>
                </div>


            </div>
        </div>
        <div class=""container"" style=""        background-color: #eeeeee;
        padding: 10px;
        padding-bottom: unset;
        margin-top: 15px"">
            <div class=""row"" style=""        padding: 10px
"">
                <div class=""col-lg-6 col-md-6 col-xs-6 col-sm-6"" style=""text-align:left"">
                    <input type=""checkbox"" id=""Status""> Set As active
                    <div class=""col-lg-12 col-md-12"">
                        <label style=""text-align:center;color:red"" id=""Error""></label>
                        <label style=""text-align:center;color:green"" id=""Success""></label>
                    </div>
                </div>
                <div class=""col-lg-6 col-md-6 col-xs-6 col-sm-6"" style=""text-align:right"">
                    <input type=""button"" class=""text-center center-block"" style=""        color: white;background-color: #c9a642"" id=");
                WriteLiteral(@"""SuiteSave"" value=""SAVE"">
                    <input type=""button"" class=""text-center center-block hidden"" style=""       color: white;background-color: #c9a642"" id=""update"" value=""Update"">
                    <input type=""button"" class=""text-center center-block clear"" style=""   color: black;"" id=""clear"" value=""Clear"">
                    <input type=""hidden"" id=""suitesave1"" />
                    <input type=""hidden"" id=""suitestatus"" />
                </div>

            </div>
        </div>
        <div class=""container"" style=""        background-color: white;

        padding-bottom: unset;
        margin-top: 15px"">

            <div class=""container"" style=""     background-color: white;    padding: 44px; padding-top: 15px; padding-bottom: 100px;"">
                <div class=""content"">
                    <div class="" container-scroller"">



                        <div class=""form-group"" id=""Excelpos"">


                            <button type=""button"" class=""btn  btn-sm"" id=""exc");
                WriteLiteral("el\">\r\n                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b5ff334d78ea2c5574d0c2e9bbc95133d03b554441573", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            </button>
                        </div>
                        <div class=""row"" style=""        margin-top: 10px"">
                            <div class=""col-sm-12 mat-elevation-z8""
                                 style=""box-shadow: unset;padding: 0px ;"" #TABLE>
                                <table style=""width: 100%;"" class=""paginated"" border=""1"" id=""example1"">
                                    <thead>
                                        <tr>
                                            <td>
                                                TA Id
                                            </td>
                                            <td>
                                                Test Suite
                                            </td>
                                            <td>
                                                Test Approach
                                            </td>
");
                WriteLiteral(@"                                        <td>
                                            Creation Date
                                        </td>
                                            <td>
                                                Status
                                            </td>
                                            <td>Delete</td>
                                        </tr>
                                    </thead>
                                    <tbody id=""tblAuthgrid"">
                                    </tbody>
                                </table>
                                <br />
                                <div class=""Pager""></div>
                            </div>

                        </div>
                    </div>
                    <!-- partial:../../partials/_footer.html -->

                </div>


            </div>

        </div>
        <!-- partial:../../partials/_footer.html -->

    </div>
    </div>
");
                WriteLiteral("    </div>\r\n\r\n    <!-- Menu Toggle Script -->\r\n    <script>\r\n        $(\"#menu-toggle\").click(function (e) {\r\n            e.preventDefault();\r\n            $(\"#wrapper\").toggleClass(\"toggled\");\r\n        });\r\n    </script>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ProductViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
