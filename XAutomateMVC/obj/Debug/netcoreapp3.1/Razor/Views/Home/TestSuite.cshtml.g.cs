#pragma checksum "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\TestSuite.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "dafb67f133cdd0a6eef91e27d2b28d28a157c7cd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_TestSuite), @"mvc.1.0.view", @"/Views/Home/TestSuite.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dafb67f133cdd0a6eef91e27d2b28d28a157c7cd", @"/Views/Home/TestSuite.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b3eb3a5bd4bb195597699a36c34031f9ee5ad7c0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_TestSuite : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ProductViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/ExportExcel.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("cursor: pointer;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\TestSuite.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dafb67f133cdd0a6eef91e27d2b28d28a157c7cd4277", async() => {
                WriteLiteral(@"
    <style>
        .dropdown1-container {
            display: block !important;
        }
    </style>
    <script>
     

        $(document).ready(function () {
            /* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */
            var dropdown = document.getElementsByClassName(""dropdown-btn"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }
            var dropdown = docume");
                WriteLiteral(@"nt.getElementsByClassName(""dropdown-btn1"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }

            var dropdown = document.getElementsByClassName(""dropdown-btn2"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
       ");
                WriteLiteral(@"                 dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }
            debugger;
            $(""#testsuitestatus"").val(""1"");
            $(""#Status"").prop(""checked"", true);
            $(document).on(""click"", ""#SuiteSave"", function () {
                debugger;
                $(""#Error"").html("""");
                $(""#Success"").html("""");
                var SuiteName = $(""#SName"").val();
                var Active = 1;
                if (SuiteName == """" || SuiteName == null || SuiteName == ""undefined"" || SuiteName == undefined) {
                    $(""#Error"").html(""Please Enter Test Suite"");
                    return false;
                }
                var inValid = /\s/;
                if ((inValid.test(SuiteName))) {

                    $(""#Error"").html('Test Suite Should not Contain Whitespace');
                    return fal");
                WriteLiteral(@"se;
                }
                var expcttest = $(""#extesName"").val();
                if (expcttest == """" || expcttest == null || expcttest == ""undefined"" || expcttest == undefined) {
                    $(""#Error"").html(""Please Enter Expected Testcase"");
                    return false;
                }
                if ($('#Status').is(':checked')) {
                    Active = 1;
                }
                else {
                    $(""#Error"").html(""Please Check Active Check box"");
                }
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Suites/SaveTestSuite"", // Controller/View
                        datatype: ""json"",
                        data: { SName: SuiteName, Active: Active, Execpttest: expcttest},
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
 ");
                WriteLiteral(@"                       },

                        success: function (data) {
                            var result = data;
                            if (data == ""Fail"") {
                                $(""#Success"").html(""Already Test Suite  Exits"");
                                return false;
                            }
                            else  if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                                }
                            else {
                                $(""#Error"").html(""Test Suit Saved Successfully"");
                            }
                            var SuiteName = $(""#SName"").val("""");
                            $(""#extesName"").val("""");
                            debugger;
                            Bindrid1(1);
                        },
                        error: function (Result) {
             ");
                WriteLiteral(@"           }

                    });
            });

            $(document).on('click', '#Clear', function () {
                clear();
            });


            function clear() {
                debugger;;
                $(""#SuiteSave"").removeClass(""hidden"");
                $(""#update"").addClass(""hidden"");
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#SName"").val("""");
                $(""#Error"").html("""");
                $(""#Success"").html("""");
                $(""#testsuitestatus"").val(""1"");
                $(""#extesName"").val("""");
                $(""#testsuiteid"").val("""");
                var table = document.getElementById('example1');
                var cells = table.getElementsByTagName('td');
                for (var i = 0; i < cells.length; i++) {
                    var rowsNotSelected = table.getElementsByTagName('tr');
                    for (var row = 0; row < rowsNotSelected.length; ");
                WriteLiteral(@"row++) {
                        rowsNotSelected[row].style.backgroundColor = """";
                        rowsNotSelected[row].classList.remove('highlight');
                    }
                }
            }


            Bindrid(1);
          
       


            $(document).on(""click"", ""#update"", function () {
                $(""#Error"").html("""");
                $(""#Success"").html("""");
              var TestSuiteId= $(""#testsuiteid"").val();
                var SuiteName = $(""#SName"").val();
                var Active = 1;
                if (SuiteName == """" || SuiteName == null || SuiteName == ""undefined"" || SuiteName == undefined) {
                    $(""#Error"").html(""Please Enter Test Suite"");
                    return false;
                }
                var inValid = /\s/;
                if ((inValid.test(SuiteName))) {

                    $(""#Error"").html('Test Suit Should not Contain Whitespace');
                    return false;
                }
        ");
                WriteLiteral(@"        var expcttest = $(""#extesName"").val();
                if (expcttest == """" || expcttest == null || expcttest == ""undefined"" || expcttest == undefined) {
                    $(""#Error"").html(""Please Enter Expected Testcase"");
                    return false;
                }
                if ($('#Status').is(':checked')) {
                    Active = 1;
                }
                else {
                    Active = 0;
                }
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Suites/UpdateTestSuite"", // Controller/View
                        datatype: ""json"",
                        data: { testId: TestSuiteId, SName: SuiteName, Active: Active, Execpttest: expcttest},
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                     ");
                WriteLiteral(@"   success: function (data) {
                            var result = data;
                            if (data == ""Success"") {
                                $(""#Success"").html(""Test Suite Updated Successfully"");
                               
                            }
                            else if (data == ""Validate"") {
                                $(""#Error"").html('Please ""Set As InActive"" ETLDB,ETL Rules and Test Approach for this Test Suite');
                                return false;
                            }
                            else if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            else {
                                $(""#Success"").html(""Test Suite Update Failed"");
                                return false;
                            }
                            var SuiteN");
                WriteLiteral(@"ame = $(""#SName"").val("""");
                            $(""#extesName"").val("""");
                            debugger;
                            $(""#SuiteSave"").removeClass(""hidden"");
                            $(""#update"").addClass(""hidden"");
                            $(""#Status"").prop(""checked"", true);
                            $(""#testsuiteid"").val("""");
                            var table = document.getElementById('example1');
                            var cells = table.getElementsByTagName('td');
                            for (var i = 0; i < cells.length; i++) {
                                var rowsNotSelected = table.getElementsByTagName('tr');
                                for (var row = 0; row < rowsNotSelected.length; row++) {
                                    rowsNotSelected[row].style.backgroundColor = """";
                                    rowsNotSelected[row].classList.remove('highlight');
                                }
                            }
         ");
                WriteLiteral(@"                   Bindrid1(1);
                        },
                        error: function (Result) {
                        }

                    });
            });

        
        });

        $(document).on(""click"", ""#excel"", function () {
            var uri = 'data:application/vnd.ms-excel;base64,'
                , template = '<html xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:x=""urn:schemas-microsoft-com:office:excel"" xmlns=""http://www.w3.org/TR/REC-html40""><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
                , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
                , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }

       ");
                WriteLiteral(@"     var table = document.getElementById(""example1"");
            //var example1 = $('.example1');

            //var filters = $('.ng-table-filters').remove();
            var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML };
            //$('.ng-table-sort-header').after(filters);
            var url = uri + base64(format(template, ctx));
            var a = document.createElement('a');
            a.href = url;

            //var today = new Date();
            //var date = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();

            a.download = 'TestSuites.xls';
            a.click();
        });
        $(document).on(""click"", ""#Searchlist"", function () {
            debugger;
            var searchres = $(""#search"").val();
            var status = $(""#testsuitestatus"").val();
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Me");
                WriteLiteral(@"thod
                    url: ""/Suites/SearchSuite"", // Controller/View
                    datatype: ""json"",
                    data: {
                        search: searchres,
                        status: status,
                    },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        debugger;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $('#tblAuthgrid').empty();
                        var tr;
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                tr = $('<tr/>');
                                tr.append(""");
                WriteLiteral(@"<td  OnClick='display(this,"" + data[i].testSuiteId + "");'  style='    cursor: pointer;'>"" + data[i].testSuitename + ""</td>"");
                                tr.append(""<td OnClick='display(this,"" + data[i].testSuiteId + "");' style='    cursor: pointer;'>"" + data[i].createdDate + ""</td>"");
                                tr.append(""<td OnClick='display(this,"" + data[i].testSuiteId + "");'  style='    cursor: pointer;'>"" + data[i].status + ""</td>"");
                                tr.append(""<td> <span  OnClick='deletefun("" + data[i].testSuiteId + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http://40.115.111.12:5000/Image/delete-trash-icon-256.png' style='height:25px' />"" : """") + "" </span></td>"");
                                $('#tblAuthgrid').append(tr);
                            }
                        }

                    },
                    error: function (Result) {

                    }

                });
        });
        function displa");
                WriteLiteral(@"y(a,val) {
            $(""#Error"").html("""");
            $(""#Success"").html("""");
            $(""#SuiteSave"").addClass(""hidden"");
            $(""#update"").removeClass(""hidden"");
            var table = document.getElementById('example1');
            var cells = table.getElementsByTagName('td');
            for (var i = 0; i < cells.length; i++) {
                var rowsNotSelected = table.getElementsByTagName('tr');
                for (var row = 0; row < rowsNotSelected.length; row++) {
                    rowsNotSelected[row].style.backgroundColor = """";
                    rowsNotSelected[row].classList.remove('highlight');
                }
            }
            a.parentNode.classList.add(""highlight"");
            debugger;
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Suites/Editvalue"", // Controller/View
                    datatype: ""json"",
                    data: { SuiteId: val },
                    hea");
                WriteLiteral(@"ders: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        var result = data;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $(""#testsuiteid"").val(data[""0""].testSuiteId);
                        $(""#SName"").val(data[""0""].testSuitename);
                        var status = data[""0""].status;
                        $(""#extesName"").val(data[""0""].excepttestcase);
                        if (status == ""1"") {
                            $(""#Status"").prop(""checked"", true);
                        }
                        else {
                            $(""#Status"").prop(""checked"", false);
                        }
                        debugge");
                WriteLiteral(@"r;
                    
                    },
                    error: function (Result) {
                    }

                });
        }
        function Bindrid(values) {
            if (values == ""1"") {
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#testsuitestatus"").val(""1"");
            }
            else {
                $(""#InActive"").addClass(""hidden"");
                $(""#Active"").removeClass(""hidden"");
                $(""#testsuitestatus"").val(""0"");
            }
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Suites/TestSuitegrid"", // Controller/View
                    datatype: ""json"",
                    data: { status: values },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
           ");
                WriteLiteral(@"         success: function (data) {
                        debugger;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $('#tblAuthgrid').empty();
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                var tr;
                                tr = $('<tr/>');
                                tr.append(""<td  OnClick='display(this,"" + data[i].testSuiteId + "");'  style='    cursor: pointer;'>"" + data[i].testSuiteId + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testSuiteId + "");'  style='    cursor: pointer;'>"" + data[i].testSuitename + ""</td>"");
                                tr.append(""<td OnClick='display(this,"" + data[i].testSuiteId + "");' style='    cursor: pointer;'>"" + data[i]");
                WriteLiteral(@".excepttestcase + ""</td>"");
                                tr.append(""<td OnClick='display(this,"" + data[i].testSuiteId + "");' style='    cursor: pointer;'>"" + data[i].createdDate + ""</td>"");
                                tr.append(""<td OnClick='display(this,"" + data[i].testSuiteId + "");'  style='    cursor: pointer;'>"" + data[i].status + ""</td>"");
                                tr.append(""<td> <span  OnClick='deletefun("" + data[i].testSuiteId + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http://40.115.111.12:5000/Image/delete-trash-icon-256.png' style='height:25px' />"" : """") + "" </span></td>"");
                                $('#tblAuthgrid').append(tr);
                            }

                        }
                        $('#example1').DataTable({
                            paging: true,
                            scrollX: true,
                            lengthChange: true,
                            searching: true,
                    ");
                WriteLiteral(@"        ordering: false
                        });

                    },
                    error: function (Result) {

                    }

                });
        }

        function Bindrid1(values) {
            if (values == ""1"") {
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#testsuitestatus"").val(""1"");
            }
            else {
                $(""#InActive"").addClass(""hidden"");
                $(""#Active"").removeClass(""hidden"");
                $(""#testsuitestatus"").val(""0"");
            }
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Suites/TestSuitegrid"", // Controller/View
                    datatype: ""json"",
                    data: { status: values },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
");
                WriteLiteral(@"                    },
                    success: function (data) {
                        debugger;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $('#tblAuthgrid').empty();
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                var tr;
                                tr = $('<tr/>');
                                tr.append(""<td  OnClick='display(this,"" + data[i].testSuiteId + "");'  style='    cursor: pointer;'>"" + data[i].testSuiteId + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testSuiteId + "");'  style='    cursor: pointer;'>"" + data[i].testSuitename + ""</td>"");
                                tr.append(""<td OnClick='display(this,"" + data[i].testSuiteId + "");' style");
                WriteLiteral(@"='    cursor: pointer;'>"" + data[i].excepttestcase + ""</td>"");
                                tr.append(""<td OnClick='display(this,"" + data[i].testSuiteId + "");' style='    cursor: pointer;'>"" + data[i].createdDate + ""</td>"");
                                tr.append(""<td OnClick='display(this,"" + data[i].testSuiteId + "");'  style='    cursor: pointer;'>"" + data[i].status + ""</td>"");
                                tr.append(""<td> <span  OnClick='deletefun("" + data[i].testSuiteId + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http://40.115.111.12:5000/Image/delete-trash-icon-256.png' style='height:25px' />"" : """") + "" </span></td>"");
                                $('#tblAuthgrid').append(tr);
                            }

                        }
                    

                    },
                    error: function (Result) {

                    }

                });
        }

        function deletefun(testsuite) {
            $.ajax(
");
                WriteLiteral(@"                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Suites/deletesuite"", // Controller/View
                    datatype: ""json"",
                    data: { testsuiteid: testsuite },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        debugger;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed"");
                            return false;
                        }

                        Bindrid1(1);
                    },
                    error: function (Result) {

                    }

                });
        }
    </script>
    <div>

                <h3 style=""        color: #ba9122; padding: 14px; margin-left: 42px;"">Test Suite</h3>
");
                WriteLiteral(@"                <div class=""container"" style="" background-color: white;   padding-bottom: unset;"">
                    <div class="" container-scroller"">

                        <div class=""container-fluid page-body-wrapper"">

                            <div class=""main-panel"">
                                <div class=""content-wrapper"" style=""padding: 1.5rem .8rem .5rem 2rem;"">

                                    <div class=""form"">
                                        <div class=""row"" style=""padding-bottom: 20px;"">
                                            <div class=""col-lg-3 col-md-3 col-xs-5 col-sm-5"" style=""text-align: left;"">
                                                <label><span style=""color: red;"">*</span>Test Suite</label><br />
                                                <input type=""text"" id=""SName"" name=""Name"" class=""txt-input form-control"" maxlength=""30"" />
                                            </div>

                                            <div class=""");
                WriteLiteral(@"col-lg-3 col-md-3 col-xs-5 col-sm-5"" style=""text-align: left;"">
                                                <label><span style=""color: red;"">*</span>Expected number of test cases</label><br />
                                                <input type=""text"" id=""extesName"" name=""Name"" class=""txt-input form-control"" maxlength=""30"" />
                                            </div>
                                        </div>

                                    </div>

                                </div>


                            </div>
                        </div>


                    </div>
                </div>

                <div class=""container"" style=""        background-color: #eeeeee;
        padding: 10px;
        padding-bottom: unset;
        margin-top: 15px"">
                    <div class=""row"" style=""        padding: 10px
"">
                        <div class=""col-lg-6 col-md-6 col-xs-6 col-sm-6"" style=""text-align:left"">
                           ");
                WriteLiteral(@" <input type=""checkbox"" id=""Status""> Set As active
                            <div class=""col-md-12"">
                                <label style=""color:red;text-align:center"" id=""Error""></label>
                                <label style=""color:green;text-align:center"" id=""Success""></label>
                            </div>
                        </div>
                        <div class=""col-lg-6 col-md-6 col-xs-6 col-sm-6"" style=""text-align:right"">
                            <input type=""submit"" class=""text-center center-block"" style=""        color: white;background-color: #c9a642"" id=""SuiteSave"" value=""SAVE"">
                            <input type=""button"" class=""text-center center-block hidden"" style=""       color: white;background-color: #c9a642"" id=""update"" value=""Update"">
                            <input type=""button"" class=""text-center center-block clear"" style=""   color: black;"" id=""Clear"" value=""Clear"">
                            <input type=""hidden"" id=""testsuiteid"" value=""Sav");
                WriteLiteral("e\" />\r\n                            <input type=\"hidden\" id=\"testsuitestatus\" value=\"Save\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n");
                WriteLiteral(@"                <div class=""container"" style=""        background-color: white;
        padding: 10px;
        padding-bottom: unset;
        margin-top: 15px"">

                    <div class=""container"" style=""     background-color: white;    padding: 44px; padding-top: 15px; padding-bottom: 100px;"">
                        <div class=""content"">
                            <div class="" container-scroller"">


");
                WriteLiteral("                                <div class=\"form-group\" id=\"Excelpos\">\r\n\r\n\r\n                                    <button type=\"button\" class=\"btn  btn-sm\" id=\"excel\">\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "dafb67f133cdd0a6eef91e27d2b28d28a157c7cd33672", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </button>
                                </div>
                                <div class=""row"" style=""        margin-top: 10px"">
                                    <div class=""col-sm-12 mat-elevation-z8""
                                         style=""box-shadow: unset;padding: 0px ;"" #TABLE>
                                        <table style=""width: 100%;"" border=""1"" id=""example1"">
                                            <thead>
                                                <tr>
                                                    <td>
                                                        TS Id
                                                    </td>
                                                    <td>
                                                        Test Suite
                                                    </td>
                                                    <td>
                                                        Ex");
                WriteLiteral(@"pected Testcase
                                                    </td>
                                                    <td>
                                                        Creation Date
                                                    </td>
                                                    <td>
                                                        Status
                                                    </td>
                                                    <td>
                                                        Delete
                                                    </td>
                                                </tr>
                                            </thead>
                                            <tbody id=""tblAuthgrid"">
                                            </tbody>
                                        </table>

                                    </div>

                                </div>
                           ");
                WriteLiteral(@" </div>
                            <!-- partial:../../partials/_footer.html -->

                        </div>


                    </div>

                </div>
                <!-- partial:../../partials/_footer.html -->

            </div>
        </div>

    </div>
    <!-- /#page-content-wrapper -->
    <!-- /#wrapper -->
    <!-- Bootstrap core JavaScript -->

    <!-- Menu Toggle Script -->
    <script>
        $(""#menu-toggle"").click(function (e) {
            e.preventDefault();
            $(""#wrapper"").toggleClass(""toggled"");
        });
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ProductViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
