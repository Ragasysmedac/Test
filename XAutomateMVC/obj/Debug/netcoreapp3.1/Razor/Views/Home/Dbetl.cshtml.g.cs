#pragma checksum "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2956b0961ba21df05c1dc32a6b32d232143ec553"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Dbetl), @"mvc.1.0.view", @"/Views/Home/Dbetl.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2956b0961ba21df05c1dc32a6b32d232143ec553", @"/Views/Home/Dbetl.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b3eb3a5bd4bb195597699a36c34031f9ee5ad7c0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Dbetl : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ProductViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/choosencdn.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendor/bootstrap/css/bootstrap.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendor/bootstrap/css/bootstrap.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/simple-sidebar.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/chosen.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/choosen.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Dash board Icon/logo-01.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString(" width: 44%; "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/login icon/connections.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width:30px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Image/tests.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/login icon/test suite.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/login icon/test approach.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/login icon/testcase.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Image/etl_rules.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/login icon/release.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Image/Picture1.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/login icon/reports (1).png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Image/Picture3.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Image/User_management.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Image/Layer 3.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Image/user-role.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Dash board Icon/logout up.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Dash board Icon/logo name-01.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString(" width: 145px; "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/login icon/Group 50.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/login icon/sign-out-alt.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_29 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("submit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_30 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("button"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_31 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("color: white;background-color: #c9a642;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_32 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_33 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "TestCASES", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_34 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("Id", new global::Microsoft.AspNetCore.Html.HtmlString("Templete"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_35 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("color: white;background-color: #c9a642"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_36 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" button text-center center-block"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_37 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Tescasetemplate", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_38 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_39 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formid"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_40 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_41 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/ExportExcel.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_42 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendor/jquery/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_43 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendor/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec55319855", async() => {
                WriteLiteral(@"
    <!-- Bootstrap CSS CDN -->
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"" integrity=""sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4"" crossorigin=""anonymous"">

    <script defer src=""https://use.fontawesome.com/releases/v5.0.13/js/solid.js"" integrity=""sha384-tzzSw1/Vo+0N5UhStP3bvwWPq+uvzCMfrN1fEFe+xBmv1C/AtVX5K0uZtmcHitFZ"" crossorigin=""anonymous""></script>
    <script defer src=""https://use.fontawesome.com/releases/v5.0.13/js/fontawesome.js"" integrity=""sha384-6OIrr52G08NpOFSZdxxz1xdNSndlD4vdcf/q2myIUVO0VsqaGHJsB0RaBE01VTOY"" crossorigin=""anonymous""></script>

    <!-- jQuery CDN - Slim version (=without AJAX) -->
    <script src=""https://code.jquery.com/jquery-3.3.1.slim.min.js"" integrity=""sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"" crossorigin=""anonymous""></script>
    <!--<Popper.JS-->
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"" integr");
                WriteLiteral(@"ity=""sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ"" crossorigin=""anonymous""></script>
    <!-- Bootstrap JS -->
    <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"" integrity=""sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm"" crossorigin=""anonymous""></script>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">

    <meta name=""viewport"" content=""width=device-width"" />
    <title>");
#nullable restore
#line 24 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
      Write(ViewBag.Title);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</title>
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:300' rel='stylesheet' type='text/css'>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">
    <meta name=""description""");
                BeginWriteAttribute("content", " content=\"", 1926, "\"", 1936, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n    <meta name=\"author\"");
                BeginWriteAttribute("content", " content=\"", 1963, "\"", 1973, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/chosen/1.4.2/chosen.jquery.min.js\"></script>\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/chosen/1.4.2/chosen.min.css\">\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec55322828", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script src=""http://code.jquery.com/jquery-1.8.3.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.jquery.js""></script>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.css"">
    <title>XAutomate -Rules</title>
    <link href=""http://52.178.152.165:5000/vendor/bootstrap/css/bootstrap.min.css"" rel=""stylesheet"" />
    <link href=""http://52.178.152.165:5000/vendor/bootstrap/css/bootstrap.css"" rel=""stylesheet"" />
    <link href=""http://52.178.152.165:5000/css/simple-sidebar.css"" rel=""stylesheet"" />
");
                WriteLiteral("    <!-- Bootstrap core CSS -->\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "2956b0961ba21df05c1dc32a6b32d232143ec55324611", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec55325791", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <!-- Custom styles for this template -->\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec55327018", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n\r\n    <script src=\"//cdn.jsdelivr.net/chosen/1.1.0/chosen.jquery.js\"></script><!-- Bootstrap core CSS -->\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec55328318", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/chosen/1.1.0/chosen.css\" />\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec55329505", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <meta name=\"viewport\" content=\"width=device-width\" />\r\n    <title>Test Approach</title>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec55331489", async() => {
                WriteLiteral(@"

    <style>
        html, body {
            height: 100%;
            margin: 0px;
            padding: 0px;
        }

        .color {
            padding: 1px;
            text-align: center;
            border-top: 1px solid #3a3434;
            border-bottom: 1px solid #3a3434;
            color: white;
        }

        #wrapper {
            min-height: 100vh;
        }

        .dropdown-container {
            display: none;
        }

        .bg-light {
            background-color: rgb(169, 169, 169) !important
        }

        .hidden {
            visibility: hidden;
            max-height: 0;
            border: unset;
            padding: unset !important;
            max-width: 0;
        }

        tr {
            text-align: center;
        }

        thead {
            background-color: gray;
            color: white;
        }

        .clear {
        }

        .bg-light1 {
            background-color: #261c1d !important;
     ");
                WriteLiteral(@"   }

        body {
            line-height: 2 !important;
        }

        #sidebar-wrapper {
            background-color: #261c1d !important;
            color: white;
        }

        .list-group-flush > .list-group-item {
            background-color: #261c1d !important;
            color: white;
        }

        .nav-link {
            color: white;
        }

        #sidebar-wrapper .list-group {
            width: 9rem !important;
        }

        .border-right {
            border-right: unset !important;
        }

        .table th, .table td {
            padding: unset !important;
        }

        html, body {
            height: 100%;
            margin: 0px;
            padding: 0px;
        }

        #wrapper {
            min-height: 100vh;
        }

        .dropdown-container {
            display: none;
            background-color: #262626;
            padding-left: 8px;
        }

        .table tbody tr.highlight td {
      ");
                WriteLiteral(@"      background-color: #261c1d;
        }

        .table-layout {
            text-align: center;
            border: 1px solid black;
            border-collapse: collapse;
            font-family: ""Trebuchet MS"";
            margin: 0 auto 0;
        }

        .highlight {
            background-color: #261c1d;
            color: white;
        }

        .selected {
            color: white;
        }
    </style>
    <script>
        /* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */

        $(document).ready(function ($) {
            debugger;
            var screens = sessionStorage.getItem(""Screen"");
            if (screens == null || screens == """" || screens == undefined) {
                window.location.href = ""/Home/Index"";
            }
            var RoleName = sessionStorage.getItem(""RoleName"");
            var Screensplit = screens.split(""|"");");
                WriteLiteral(@"
            for (var i = 0; i < Screensplit.length; i++) {
                var val = Screensplit[i];
                var show = val.split("","");
                var val2 = show[""0""];
                var val1 = show[""1""];
                switch (val2) {
                    case ""Connection"":
                        if (val1 == ""Show"") {
                            $(""#Menuconnection"").removeClass(""hidden"");
                        }
                        else {
                            $(""#Menuconnection"").addClass(""hidden"");
                        }
                        break;
                    case ""Suite"":
                        if (val1 == ""Show"") {
                            $(""#MenuSuites"").removeClass(""hidden"");
                        }
                        else {
                            $(""#MenuSuites"").addClass(""hidden"");
                        }
                        break;
                    case ""Approach"":
                        if (val1 == ""Show"")");
                WriteLiteral(@" {
                            $(""#MenuTestApproach"").removeClass(""hidden"");
                        }
                        else {
                            $(""#MenuTestApproach"").addClass(""hidden"");
                        }
                        break;
                    case ""Testcases"":
                        if (val1 == ""Show"") {
                            $(""#MenuTestcases"").removeClass(""hidden"");
                        }
                        else {
                            $(""#MenuTestcases"").addClass(""hidden"");
                        }
                        break;
                    case ""etldb"":
                        if (val1 == ""Show"") {
                            $(""#MenuEtlrules"").removeClass(""hidden"");
                        }
                        else {
                            $(""#MenuEtlrules"").addClass(""hidden"");
                        }
                        break;
                    case ""Release"":
                        if (val1 =");
                WriteLiteral(@"= ""Show"") {
                            $(""#MenuRelease"").removeClass(""hidden"");
                        }
                        else {
                            $(""#MenuRelease"").addClass(""hidden"");
                        }
                        break;
                    case ""Executions"":
                        if (val1 == ""Show"") {
                            $(""#MenuExecution"").removeClass(""hidden"");
                        }
                        else {
                            $(""#MenuExecution"").addClass(""hidden"");
                        }
                        break;
                    case ""TestReport"":
                        if (val1 == ""Show"") {
                            $(""#MenuTestReport"").removeClass(""hidden"");
                        }
                        else {
                            $(""#MenuTestReport"").addClass(""hidden"");
                        }
                        break;
                    case ""Analytics"":
                       ");
                WriteLiteral(@" if (val1 == ""Show"") {
                            $(""#MenuAnaltics"").removeClass(""hidden"");
                        }
                        else {
                            $(""#MenuAnaltics"").addClass(""hidden"");
                        }
                        break;
                    case ""Usermanage"":
                        if (val1 == ""Show"") {
                            $(""#MenuUserMangment"").removeClass(""hidden"");
                        }
                        else {
                            $(""#MenuUserMangment"").addClass(""hidden"");
                        }
                        break;
                }

            }
            var dropdown = document.getElementsByClassName(""dropdown-btn"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
            ");
                WriteLiteral(@"        if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }
            var dropdown = document.getElementsByClassName(""dropdown-btn1"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }

            var dropdown = document.getElementsByClassName(""dropdown-btn2"");
            var i;

          ");
                WriteLiteral(@"  for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }
            $(""#Etlstatus"").val(""1"");
            var option;
            option = $('<option/>');
            option.append(""<option value=''>Select Rule</option>"");
            var option1;
            option1 = $('<option/>');
            option1.append(""<option value=''>Select Rule</option>"");

            $('#RulesId').append(option1);
           // $('#selectrule').append(option);
            $(""#Status"").prop(""checked"", true);
            $(document).on(""change"", ""#ProductId"", ");
                WriteLiteral(@"function () {
                var SuiteName = $(""#ProductId"").val();

                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/RulesConfigset"", // Controller/View
                        datatype: ""json"",
                        data: {
                            SuiteId: SuiteName,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $('#RulesId').empty();
                            $(""#ExpectedResultVal"").val('');
                           ");
                WriteLiteral(@" $(""#TestCaseuppend"").empty();
                            $(""#Testrulemodified"").addClass(""hidden"");
                            $(""#Testrule"").addClass(""hidden"");
                            $(""#ExpectedParameter"").empty();
                            $(""#selectrule"").empty();
                            $(""#Name"").val('');
                            $('#selectrule').empty();
                            var option1;
                            option1 = $('<option/>');
                            option1.append(""<option value='' disabled>Select Rules</option>"");
                            $('#selectrule').append(option1);
                            //  var option;
                            // option = $('<option/>');
                            for (var i = 0; i < data.length; i++) {

                                $(""#selectrule"").append(""<option value="" + data[i].rulesId + "">"" + data[i].ruleName + ""</option>"");
                                //  $('#selectrule').append(option);
   ");
                WriteLiteral(@"                         }
                        },
                        error: function (Result) {
                        }

                    });

            });

            $(document).on(""change"", ""#ProductSearchId"", function () {
                $('#tblAuthgrid').empty();
                var SuiteName = $(""#ProductSearchId"").val();

                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/RulesConfigset"", // Controller/View
                        datatype: ""json"",
                        data: {
                            SuiteId: SuiteName,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            if (data == ""Auth Fail"") {
                         ");
                WriteLiteral(@"       $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $('#RulesId').empty();
                            var option1;
                            option1 = $('<option/>');
                            option1.append(""<option value=''>Select Rules</option>"");
                            $('#RulesId').append(option1);
                            var option;
                            for (var i = 0; i < data.length; i++) {

                                $('#RulesId').append(""<option value="" + data[i].rulesId + "">"" + data[i].ruleName + ""</option>"");



                            }
                        },
                        error: function (Result) {
                            swal(""Error!"", ""Error."", ""error"");
                        }

                    });
            });
            $(document).on('change', '#ProductId', function () {
                deb");
                WriteLiteral(@"ugger;
                var RuleId = $(""#ProductId"").val();

                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/RulesCondtions"", // Controller/View
                        datatype: ""json"",
                        data: {
                            RulesId: RuleId,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $(""#TestCaseuppend"").empty();
                            $(""#Testrulemodified"").remov");
                WriteLiteral(@"eClass(""hidden"");
                            var option;
                            var div;
                            div = $('<div class=""row"">');
                            $(""#Length"").val(data[""0""].ruleParameter);
                            if (data.length > 0) {
                                for (var i = 0; i < data[""0""].ruleParameter; i++) {
                                    $(""#Testrule"").removeClass(""hidden"");
                                    $(""#Testrule"").val(data[""0""].ruleCondtion);

                                    $(""#Testrulemodified"").val(data[""0""].ruleCondtion);

                                    //div.append('<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>Parameter ' + [i] + '</label><br/>'
                                    //    +' <input type=""text"" id=""parameter' + [i] + '"" name=""testdata"" class=""txt-input form-control"" />  </div> </div> ');

                                    var LabelName = (data[""0""].label[i].parameterName).toLowerCase(");
                WriteLiteral(@");

                                    var DBpara = '<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>' + data[""0""].label[i].parameterName + '[' + i + ']</label><br/>';
                                    if (LabelName != ""schema"" && LabelName != ""table_name"" && LabelName != ""column_name"") {
                                        DBpara += ' <input class=""form-control parameters""  id=""parameter' + [i] + '"" placeholder=""Values"" />';
                                    }
                                    else {
                                        DBpara += ' <select class=""form-control parameters""  id=""parameter' + [i] + '""><option disabled selected>Select Parameter </option></select>'

                                    }
                                    DBpara += '</div> ';
                                    $(""#TestCaseuppend"").append(DBpara);
                                    for (var k = 0; k < data[""0""].parameter.length; k++) {
                                      ");
                WriteLiteral(@"  $(""#parameter"" + [i]).append(""<option value="" + data[""0""].parameter[k].tablecolumn1 + "" style='color: "" + data[""0""].parameter[k].color + ""' >"" + data[""0""].parameter[k].tablecolumn1 + ""</option>"");
                                    }


                                }
                            }

                        },
                        error: function (Result) {
                            swal(""Error!"", ""Error."", ""error"");
                        }

                    });
            });

            $(document).on(""change"", ""#ProductSearchId"", function () {
                debugger;
                var rulename = $(""#ProductSearchId"").val();
               var Status = $(""#Etlstatus"").val();
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/Bindgridrule"", // Controller/View
                        datatype: ""json"",
                        data: {
                            Rule");
                WriteLiteral(@"s: rulename,
                            status: Status,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $('#tblAuthgrid').empty();
                            var tr;
                            if (data.length > 0) {
                                for (var i = 0; i < data.length; i++) {
                                    var parameters = """";
                                    for (var j = 0; j < data[i].testdata.length; j++) {

                                        if (paramete");
                WriteLiteral(@"rs == """") {
                                            parameters = data[i].testdata[j].parameterName;
                                        }
                                        else {
                                            parameters += "","" + data[i].testdata[j].parameterName;
                                        }

                                    }
                                    tr = $('<tr/>');
                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCaseName + ""'>"" + data[i].testCaseName + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCasesId + ""'>"" + data[i].ruleName + ""</td>"");
                                   // tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" ");
                WriteLiteral(@"+ data[i].testApproachName + ""</td>"");

                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'  >"" + parameters + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].exceptedResult + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].description + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].status + ""</td>"");
                                    $('#tblAuthgrid').append(tr);
                                }
                            }
                        },
                        error: function (Result) {

                        }

            ");
                WriteLiteral(@"        });
            });


            $(document).on(""change"", ""#TestsuidId"", function () {
                $(""#Error"").html("""");
                var rule = $(""#ProductId"").val();
                if (rule == null || rule == """") {
                    $(""#Error"").html(""Please Select Rule "");
                    return false;
                }

                var Connection = $(this).val();
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/Connectionchange"", // Controller/View
                        datatype: ""json"",
                        data: {
                            connections: Connection,
                            rules: rule,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: funct");
                WriteLiteral(@"ion (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $(""#ProductId"").val(data[""0""].rulesId);
                            var RuleID = String(data[""0""].rulesId);
                            debugger;
                            $(""#TestCaseuppend"").empty();
                            for (var i = 0; i < data[""0""].ruleParameter; i++) {
                                $(""#Testrule"").removeClass(""hidden"");
                                $(""#Testrule"").val(data[""0""].ruleCondtion);

                                $(""#Testrulemodified"").val(data[""0""].ruleCondtion);

                                //div.append('<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>Parameter ' + [i] + '</label><br/>'
                                //    +' <i");
                WriteLiteral(@"nput type=""text"" id=""parameter' + [i] + '"" name=""testdata"" class=""txt-input form-control"" />  </div> </div> ');

                                var LabelName = (data[""0""].label[i].parameterName).toLowerCase();

                                var DBpara = '<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>' + data[""0""].label[i].parameterName + '[' + i + ']</label><br/>';
                                if (LabelName != ""schema"" && LabelName != ""table_name"" && LabelName != ""column_name"") {
                                    DBpara += ' <input class=""form-control parameters""  id=""parameter' + [i] + '"" placeholder=""Values"" />';
                                }
                                else {
                                    DBpara += ' <select class=""form-control parameters""  id=""parameter' + [i] + '""><option disabled selected>Select Parameter </option></select>'

                                }
                                DBpara += '</div> ';
                          ");
                WriteLiteral(@"      $(""#TestCaseuppend"").append(DBpara);
                                for (var k = 0; k < data[""0""].parameter.length; k++) {
                                    $(""#parameter"" + [i]).append(""<option value="" + data[""0""].parameter[k].tablecolumn1 + "" style='color: "" + data[""0""].parameter[k].color + ""' >"" + data[""0""].parameter[k].tablecolumn1 + ""</option>"");
                                }


                            }
                        },
                        error: function (Result) {

                        }

                    });
            });

            $(document).on(""click"", ""#Save"", function () {

                $(""#Error"").html('');
                $(""#Success"").html('');
                var Active = 1;
                //var Rule = $(""#selectrule"").val();
                //if (Rule == null || Rule == """" || Rule == undefined || Rule == ""0"") {
                //    $(""#Error"").html(""Please Select on Rule"");
                //    return false;
            ");
                WriteLiteral(@"    //}
                var DemoName = $(""#ProductId"").val();
                if (DemoName == null || DemoName == """" || DemoName == undefined) {
                    $(""#Error"").html(""Please Select Rule"");
                    return false;
                }
                var Name = $(""#Name"").val();
                if (Name == null || Name == """" || Name == undefined) {
                    $(""#Error"").html(""Please Enter Name"");
                    return false;
                }
               
                var connection = $(""#TestsuidId"").val();
                if (connection == null && connection == """" && connection == undefined) {
                    $(""#Error"").html(""Please Select Connection"");
                    return false;
                }
                var parameter;
                var lenthcount = $(""#Length"").val();
                for (var i = 0; i < lenthcount; i++) {
                    if (parameter == null || parameter == """" || parameter == undefined) {
          ");
                WriteLiteral(@"              parameter = $(""#parameter"" + i + """").val();
                    }
                    else {
                        parameter = parameter + "",,,"" + $(""#parameter"" + i + """").val();
                    }

                }

                var testRule = $(""#Testrule"").val();

                var Except = $(""#ExpectedResultVal"").val();
                if (Except == null || Except == '' || Except == undefined) {
                    $(""#Error"").html(""Please Select Expected Result"");
                    return false;
                }
                var Exceptvalue = """";
                if (Except == ""Row Count Is Equal To X"" || Except == ""Row Count Is Greater Than X"" || Except == ""Row Count Is Less Than X"") {
                    Exceptvalue = $(""#Expectedvalue"").val();

                    if (Exceptvalue == null || Exceptvalue == """" || Exceptvalue == undefined) {
                        $(""#Error"").html(""Please Expected Values"");
                        return false;
       ");
                WriteLiteral(@"             }
                    Except = Except.slice(0, -1);
                }

                var des = $(""#Description"").val();
                if ($('#Status').is(':checked')) {
                    Active = 1;
                }
                else {
                    $(""#Error"").html(""Please Check Active Check box"");
                }
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/SaveGrid"", // Controller/View
                        datatype: ""json"",
                        data: {
                           // Rules: Rule,
                            Name: Name,
                            SuiteName: DemoName,
                            Except: Except,
                            Parameter: parameter,
                            testRule: testRule,
                            Description: des,
                            status: Active,
                            ExpectedValue: Ex");
                WriteLiteral(@"ceptvalue,
                            connection: connection,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                         //   $(""#selectrule"").val('');
                            var option1;
                            option1 = $('<option/>');
                            option1.append(""<option value=''>Select Rule</option>"");
                            //$('#selectrule').append(option1);
                            $(""#Name"").val('');
                            $(""#ProductId"").val('');
                            Bindrid(""1"");
 ");
                WriteLiteral(@"                           $(""#ExpectedResultVal"").val('');
                            $(""#TestCaseuppend"").empty();
                            $(""#TestsuidId"").val('');
                            $(""#Description"").val("""");
                            $(""#Testrule"").addClass(""hidden"");
                          //  $(""#selectrule"").empty();
                            $(""#Success"").html(""Successfully Saved Test Case"");
                            $(""#ExpectedParameter"").empty();
                        },
                        error: function (Result) {

                        }

                    });
            });

            $(document).on(""click"", "".rules"", function () {
                debugger;
                $(""#Update"").removeClass(""hidden"");

                $(""#Save"").addClass(""hidden"");
                var testcaseid = $(this).val();
                $(""#updateis"").val(testcaseid);
                var rule = $(""#"" + testcaseid).val();
                $.ajax(
     ");
                WriteLiteral(@"               {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/EditGrid"", // Controller/View
                        datatype: ""json"",
                        data: {
                            test: testcaseid,
                            rules: rule,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $(""#ProductId"").val(data[""0""].rulesId);
                            var RuleID = String(data[""0""].rulesId);
                            debug");
                WriteLiteral(@"ger;
                            //$.ajax(
                            //    {
                            //        type: ""GET"", //HTTP POST Method
                            //        url: ""/Home/RulesConfigset"", // Controller/View
                            //        datatype: ""json"",
                            //        data: {
                            //            SuiteId: data[""0""].testApproachid,
                            //        },
                            //        success: function (data) {
                            //            debugger;
                            //            var option;
                            //            $(""#selectrule"").empty();
                            //            for (var i = 0; i < data.length; i++) {
                            //                option = $('<option/>');
                            //                option.append(""<option value="" + data[i].rulesId + "">"" + data[i].ruleName + ""</option>"");



                   ");
                WriteLiteral(@"         //                $('#selectrule').append(option);

                            //            }
                            //            $(""#selectrule"").val(RuleID);
                            //        },
                            //        error: function (Result) {

                            //        }

                            //    });

                            $(""#Name"").val(data[""0""].testCaseName);
                          //  $(""#ProductId"").val(data[""0""].testApproachid);
                            $(""#TestResult"").val(data[""0""].exceptedResult);
                            $(""#TestCaseuppend"").empty();
                            $(""#Testrulemodified"").removeClass(""hidden"");
                            var option;
                            var div;
                            div = $('<div class=""row"">');
                            $(""#Length"").val(data[""0""].ruleParameter);

                            var datalis = data[""0""].testdata.split("","");;
    ");
                WriteLiteral(@"                        if (data.length > 0) {
                                for (var i = 0; i < data[""0""].ruleParameter; i++) {
                                    $(""#Testrule"").removeClass(""hidden"");
                                    $(""#Testrule"").val(data[""0""].ruleCondtion);
                                    $(""#Testrulemodified"").val(data[""0""].ruleCondtion);

                                    //div.append('<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>Parameter ' + [i] + '</label><br/><input type = ""text"" id = ""parameter' + [i] + '"" value=' + datalis[i] + ' name = ""testdata"" class= ""txt-input form-control"" />  </div> </div>  ');




                                    //$(""#TestCaseuppend"").append(div);

                                    $(""#TestCaseuppend"").append('<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>' + data[""0""].labelName[i].parameterName + '</label><br/>'
                                        + ' <select class=""form-control""  id=""para");
                WriteLiteral(@"meter' + [i] + '""><option disabled>Select Parameter </option>' +
                                        '</select>  </div> </div> ');
                                    for (var k = 0; k < data[""0""].parameter.length; k++) {
                                        $(""#parameter"" + [i]).append(""<option value="" + data[""0""].parameter[k].tablecolumn1 + "" style='color: "" + data[""0""].parameter[k].color + ""' >"" + data[""0""].parameter[k].tablecolumn1 + ""</option>"");

                                    }
                                    $(""#parameter"" + [i]).val(datalis[i]);

                                }
                            }
                        },
                        error: function (Result) {

                        }

                    });
            });

            $(document).on(""click"", ""#excel"", function () {
                var uri = 'data:application/vnd.ms-excel;base64,'
                    , template = '<html xmlns:o=""urn:schemas-microsoft-com:office:office""");
                WriteLiteral(@" xmlns:x=""urn:schemas-microsoft-com:office:excel"" xmlns=""http://www.w3.org/TR/REC-html40""><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
                    , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
                    , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }

                var table = document.getElementById(""example"");
                //var example1 = $('.example1');

                //var filters = $('.ng-table-filters').remove();
                var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML };
                //$('.ng-table-sort-header').after(filters);
                var url = uri + base64(format(template, ctx));
                var");
                WriteLiteral(@" a = document.createElement('a');
                a.href = url;

                //var today = new Date();
                //var date = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();

                a.download = 'TestCase.xls';
                a.click();
            });
            $(document).on('click', '#Clear', function () {
                clear();
                $(""#Error"").html('');
                $(""#Success"").html('');
                var table = document.getElementById('example');
                var cells = table.getElementsByTagName('td');
                for (var i = 0; i < cells.length; i++) {
                    var rowsNotSelected = table.getElementsByTagName('tr');
                    for (var row = 0; row < rowsNotSelected.length; row++) {
                        rowsNotSelected[row].style.backgroundColor = """";
                        rowsNotSelected[row].classLis");
                WriteLiteral(@"t.remove('highlight');
                    }
                }
                $(""#ExpectedParameter"").empty();
            });

            function clear() {
                $(""#Name"").val('');
                $(""#ProductId"").val('');
                $(""#ExpectedResultVal"").val('');
                $(""#Testrule"").addClass(""hidden"");
                $(""#updateis"").val("""");
                $(""#Description"").val("""");
                $(""#testsuitestatus"").val(""1"");
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                Bindrid(""1"");
                $(""#TestsuidId"").val("""");
                var table = document.getElementById('example');
                var cells = table.getElementsByTagName('td');
                for (var i = 0; i < cells.length; i++) {
                    var rowsNotSelected = table.getElementsByTagName('tr');
                    for (var row = 0; row < rowsNotSelected.length; row++) {
                      ");
                WriteLiteral(@"  rowsNotSelected[row].style.backgroundColor = """";
                        rowsNotSelected[row].classList.remove('highlight');
                    }
                }
                $(""#TestCaseuppend"").empty();
                $(""#Testrulemodified"").addClass(""hidden"");
                $(""#Update"").addClass(""hidden"");
                $(""#Save"").removeClass(""hidden"");
            }

            $(document).on(""click"", ""#Update"", function () {
                debugger;
                $(""#Error"").html('');
                $(""#Success"").html('');
                var Active = 1;
                //var Rule = $(""#selectrule"").val();
                //if (Rule == null && Rule == """" && Rule == undefined) {
                //    $(""#Error"").html(""Please Select on Rule"");
                //    return false;
                //}
                var DemoName = $(""#ProductId"").val();
                if (DemoName == null && DemoName == """" && DemoName == undefined) {
                    $(""#Error"").htm");
                WriteLiteral(@"l(""Please Select Rule Name"");
                    return false;
                }

                var Name = $(""#Name"").val();
                if (Name == null && Name == """" && Name == undefined) {
                    $(""#Error"").html(""Please Enter Name"");
                    return false;
                }
                var connection = $(""#TestsuidId"").val();
                if (connection == null && connection == """" && connection == undefined) {
                    $(""#Error"").html(""Please Select Connection"");
                    return false;
                }
                var parameter;
                var lenthcount = $(""#Length"").val();
                for (var i = 0; i < lenthcount; i++) {
                    if (parameter == null || parameter == """" || parameter == undefined) {
                        parameter = $(""#parameter"" + i + """").val();
                    }
                    else {
                        parameter = parameter + "",,,"" + $(""#parameter"" + i + """").va");
                WriteLiteral(@"l();
                    }

                }

                var testRule = $(""#Testrule"").val();

                var Except = $(""#ExpectedResultVal"").val();
                if (Except == null && Except == '' && Except == undefined) {
                    $(""#Error"").html(""Please Select Expected Result"");
                    return false;
                }
                var Exceptvalue = """";
                if (Except == ""Row Count Is Equal To X"" || Except == ""Row Count Is Greater Than X"" || Except == ""Row Count Is Less Than X"") {
                    Exceptvalue = $(""#Expectedvalue"").val();

                    if (Exceptvalue == null || Exceptvalue == """" || Exceptvalue == undefined) {
                        $(""#Error"").html(""Please Expected Values"");
                        return false;
                    }
                    Except = Except.slice(0, -1);
                }
                var TeId = $(""#updateis"").val();
                if ($('#Status').is(':checked')) {
     ");
                WriteLiteral(@"               Active = 1;
                }
                else {
                    Active = 0;
                }
                var des = $(""#Description"").val();
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/UpdateGrid"", // Controller/View
                        datatype: ""json"",
                        data: {
                           // Rules: Rule,
                            Name: Name,
                            SuiteName: DemoName,
                            Except: Except,
                            Parameter: parameter,
                            testRule: testRule,
                            testcaseid: TeId,
                            status: Active,
                            Describtion: des,
                            Exceptvalues: Exceptvalue,
                            connection: connection,
                        },
                        headers: {
       ");
                WriteLiteral(@"                     ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $(""#Name"").val('');
                            $(""#ProductId"").val('');
                            $(""#ExpectedResultVal"").val('');
                            $(""#Testrule"").addClass(""hidden"");
                            $(""#updateis"").val("""");
                            $(""#Description"").val("""");
                            $(""#Update"").addClass(""hidden"");
                            $(""#TestsuidId"").val('');
                            $(""#Save"").removeClass(""hidden"");
                            $(""");
                WriteLiteral(@"#selectrule"").empty();
                            $(""#ExpectedParameter"").empty();
                            var option1;
                            option1 = $('<option/>');
                            option1.append(""<option value=''>Select Rule</option>"");
                            $('#selectrule').append(option1);
                            $(""#TestCaseuppend"").empty();
                            $(""#Testrulemodified"").addClass(""hidden"");
                            Bindrid(""1"");
                            $(""#Success"").html(""Successfully Updated Test Case"");
                        },
                        error: function (Result) {

                        }

                    });
            });

            $(""#Update"").addClass(""hidden"");
            $(""#Save"").removeClass(""hidden"");
            var Oldvalues;
            $(document).on(""click"", "".parameters"", function () {

                Oldvalues = $(this).val();


            });
            $(document).on");
                WriteLiteral(@"(""change"", "".parameters"", function () {
                debugger;
                var values = $(this).val();
                var Id = $(this).attr('id');
                Id = Id.replaceAll('parameter', '');
                var rules = $(""#Testrulemodified"").val();
                if (Oldvalues == null || Oldvalues == """") {
                    rules = rules.replaceAll(""["", """");
                    rules = rules.replaceAll(""]"", """");
                    rules = rules.replaceAll(Id, values);
                }
                else {

                    rules = rules.replaceAll(Oldvalues, values);
                }

                $(""#Testrulemodified"").val(rules);
            });

            $(document).on(""change"", ""#ExpectedResultVal"", function () {
                debugger;
                $(""#ExpectedParameter"").empty();
                var Expected = $(this).val();
                if (Expected == ""Row Count Is Equal To X"" || Expected == ""Row Count Is Greater Than X"" || Expected == """);
                WriteLiteral(@"Row Count Is Less Than X"") {
                    $(""#ExpectedParameter"").append(""<label>Expected Parameter</label><input type='text'  class='form-control' Id='Expectedvalue' />"")
                }
            });

            //SearchList

            $(document).on(""click"", ""#Searchlist"", function () {
                debugger;
                var searchres = $(""#search"").val();
                var statsu = $(""#Etlstatus"").val();
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/SearchBindGrid"", // Controller/View
                        datatype: ""json"",
                        data: {
                            search: searchres,
                            status: statsu,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
      ");
                WriteLiteral(@"                  success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $('#tblAuthgrid').empty();
                            var tr;
                            if (data.length > 0) {
                                for (var i = 0; i < data.length; i++) {
                                    var parameters = """";
                                    for (var j = 0; j < data[i].testdata.length; j++) {
                                       
                                        if (parameters == """") {
                                            parameters = data[i].testdata[j].parameterName;
                                        }
                                        else {
                                            parameters");
                WriteLiteral(@" += "","" + data[i].testdata[j].parameterName;
                                        }

                                    }
                                    tr = $('<tr/>');
                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCaseName + ""'>"" + data[i].testCaseName + ""</td>"");
                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCasesId + ""'>"" + data[i].ruleName + ""</td>"");
                                //    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].testApproachName + ""</td>"");
                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'>"" + data[i].description + ""</td>"");
                          ");
                WriteLiteral(@"          tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + parameters + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].exceptedResult + ""</td>"");

                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'  >Active</td>"");
                                    $('#tblAuthgrid').append(tr);
                                }
                            }

                        },
                        error: function (Result) {

                        }

                    });
            });
            $('#formid').on('keyup keypress', function (e) {
                var keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    return false;
   ");
                WriteLiteral(@"             }
            });
          
            Bindrid(""1"");


            $('#example tbody tr td').click(function () {
                debugger;
                $(this).addClass('highlight').siblings().removeClass('highlight');
            });
        });

        function Bindrid(Active) {
            if (Active == ""1"") {
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#Etlstatus"").val(""1"");
            }
            else {
                $(""#InActive"").addClass(""hidden"");
                $(""#Active"").removeClass(""hidden"");
                $(""#Etlstatus"").val(""0"");
            }
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Home/ETLBindGrid"", // Controller/View
                    datatype: ""json"",
                    data: { status: Active },
                    headers: {
                        ""Content-Type"": JSON,
      ");
                WriteLiteral(@"                  'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        debugger;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $('#tblAuthgrid').empty();
                        var tr;
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                var parameters = """";
                                tr = $('<tr/>');
                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCaseName + ""'>"" + data[i].testCaseName + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  styl");
                WriteLiteral(@"e='    cursor: pointer;width: 50px' value='"" + data[i].testCasesId + ""'>"" + data[i].ruleName + ""</td>"");
                                //  tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].testApproachName + ""</td>"");
                                for (var j = 0; j < data[i].testdata.length; j++){
                                    if (parameters == """") {
                                        parameters = data[i].testdata[j].parameterName;
                                    }
                                    else {
                                        parameters += "","" + data[i].testdata[j].parameterName;
                                    }
                                    
                                }

                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'>"" + data[i].description + ""</td>"");
                      ");
                WriteLiteral(@"          tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + parameters + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].exceptedResult + ""</td>"");

                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'  >"" + data[i].status + ""</td>"");
                                $('#tblAuthgrid').append(tr);
                            }
                        }

                    },
                    error: function (Result) {

                    }

                });
        }
        function display(a, val) {
            debugger;
            $(""#ExpectedParameter"").empty();
            $(""#Error"").html("""");
            $(""#Success"").html("""");
            $(""#Save"").addClass(""hidden"");
            $(""#Update"").removeClass(""");
                WriteLiteral(@"hidden"");
            var table = document.getElementById('example');
            var cells = table.getElementsByTagName('td');
            for (var i = 0; i < cells.length; i++) {
                var rowsNotSelected = table.getElementsByTagName('tr');
                for (var row = 0; row < rowsNotSelected.length; row++) {
                    rowsNotSelected[row].style.backgroundColor = """";
                    rowsNotSelected[row].classList.remove('highlight');
                }
            }
            a.parentNode.classList.add(""highlight"");
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Home/Editdbetl"", // Controller/View
                    datatype: ""json"",
                    data: { dbetlId: val },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (");
                WriteLiteral(@"data) {
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        var result = data;
                        $(""#updateis"").val(data[""0""].testCasesId)
                        $(""#ProductId"").val(data[""0""].rulesId);
                        $(""#TestsuidId"").val(data[""0""].connection);
                        var RuleID = (data[""0""].rulesId);
                        //$.ajax(
                        //    {
                        //        type: ""GET"", //HTTP POST Method
                        //        url: ""/Home/RulesConfigset"", // Controller/View
                        //        datatype: ""json"",
                        //        data: {
                        //            SuiteId: data[""0""].testApproachid,
                        //        },
                        //        headers: {
                        /");
                WriteLiteral(@"/            ""Content-Type"": JSON,
                        //            'Authorization': localStorage.getItem(""AuthoToken""),
                        //        },
                        //        success: function (data) {

                        //            var option;
                        //            $(""#selectrule"").empty();
                        //            var option1;
                        //            option1 = $('<option/>');
                        //            option1.append(""<option value=''>Select Rules</option>"");
                        //            $('#selectrule').append(option1);
                        //            for (var i = 0; i < data.length; i++) {
                        //                option = $('<option/>');
                        //                $('#selectrule').append(""<option value="" + data[i].rulesId + "">"" + data[i].ruleName + ""</option>"");

                        //            }
                        //            $('#selectrule').val");
                WriteLiteral(@"(RuleID);
                        //        },
                        //        error: function (Result) {

                        //        }

                        //    });
                        var Exxpectedparameter = data[""0""].expextedparameter;
                        var result = data[""0""].exceptedResult;
                        $(""#ExpectedParameter"").empty();
                        if (Exxpectedparameter != null && Exxpectedparameter != """") {
                            result = result.slice(0, -1);
                            result = result + ""X"";
                            $(""#ExpectedParameter"").append(""<label>Expected Parameter</label><input type='text' class='form-control' Id='Expectedvalue' value='"" + Exxpectedparameter + ""' />"")
                        }
                        $(""#Name"").val(data[""0""].testCaseName);
                       // $(""#ProductId"").val(data[""0""].testApproachid);
                        $(""#ExpectedResultVal"").val(result);
                 ");
                WriteLiteral(@"       $(""#TestCaseuppend"").empty();

                        var option;
                        var div;
                        div = $('<div class=""row"">');
                        $(""#Length"").val(data[""0""].ruleParameter);
                        var condition = data[""0""].ruleCondtion
                        var datalis = data[""0""].testdata.split("","");;
                        $(""#TestCaseuppend"").empty();
                        if (data.length > 0) {
                            for (var i = 0; i < data[""0""].ruleParameter; i++) {
                                $(""#Testrule"").removeClass(""hidden"");
                                $(""#Testrulemodified"").removeClass('hidden');
                                $(""#Testrule"").val(data[""0""].ruleCondtion);



                                //div.append('<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>Parameter ' + [i] + '</label><br/><input type = ""text"" id = ""parameter' + [i] + '"" value=""' + datalis[i] + '"" name = ""testdata"" cla");
                WriteLiteral(@"ss= ""txt-input form-control"" />  </div> </div>  ');


                                debugger;

                                //$(""#TestCaseuppend"").append(div);

                                var LabelName = (data[""0""].labelName[i].parameterName).toLowerCase();

                                var DBpara = '<div class=""col-lg-3""  style=""padding-top: 20px;padding-bottom: 20px;""> <label>' + data[""0""].labelName[i].parameterName + '[' + i + '] </label><br/>';
                                if (LabelName != ""schema"" && LabelName != ""table_name"" && LabelName != ""column_name"") {
                                    DBpara += ' <input class=""form-control parameters""  id=""parameter' + [i] + '"" placeholder=""Values"" />';
                                }
                                else {
                                    DBpara += ' <select class=""form-control parameters""  id=""parameter' + [i] + '""><option disabled selected>Select Parameter </option></select>'

                              ");
                WriteLiteral(@"  }
                                DBpara += '</div> ';
                                $(""#TestCaseuppend"").append(DBpara);
                                for (var k = 0; k < data[""0""].parameter.length; k++) {
                                    $(""#parameter"" + [i]).append(""<option value="" + data[""0""].parameter[k].tablecolumn1 + "" style='color: "" + data[""0""].parameter[k].color + ""' >"" + data[""0""].parameter[k].tablecolumn1 + ""</option>"");
                                }

                                debugger;
                                $(""#parameter"" + [i]).val(data[""0""].testcaseparameter[i].parameterName);
                                condition = condition.replaceAll(""["", """");
                                condition = condition.replaceAll(""]"", """");
                                condition = condition.replaceAll(i, data[""0""].testcaseparameter[i].parameterName);

                            }
                            $(""#Testrulemodified"").val(condition);
                  ");
                WriteLiteral(@"      }



                        var status = data[""0""].status;
                        if (status == ""1"") {
                            $(""#Status"").prop(""checked"", true);
                        }
                        else {
                            $(""#Status"").prop(""checked"", false);
                        }
                        debugger;

                    },
                    error: function (Result) {
                    }

                });
        }

    </script>
    <div>




        <div class=""d-flex"" id=""wrapper"">

            <!-- Sidebar -->
            <div class=""bg-light border-right"" id=""sidebar-wrapper"" style=""text-align:center"">
                <a href=""/Home/MenuExample"" style=""cursor:pointer"">
                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec55396585", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </a>\r\n                <div class=\"list-group list-group-flush\">\r\n\r\n                    <a href=\"/DbConfig/DbConfig\" class=\"list-group-item list-group-item-action bg-light Admin color\" id=\"Menuconnection\">\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec55398021", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        <h6>CONNECTIONS</h6>\r\n                    </a>\r\n                    <a class=\"list-group-item list-group-item-action bg-light  dropdown-btn1 color\">\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec55399402", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

                        <h6> TESTS</h6>
                    </a>
                    <div class=""dropdown1-container"" style=""        background-color: #A9A9A9 !important"">
                        <a href=""/Home/TestSuite"" class=""list-group-item list-group-item-action bg-light Admin color "" id=""MenuSuites"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553100929", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            <h6>TEST SUITE</h6>\r\n                        </a>\r\n                        <a href=\"/Suites/Suite\" class=\"list-group-item list-group-item-action bg-light Admin color\" id=\"MenuTestApproach\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553102365", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            <h6>TEST APPROACH</h6>\r\n                        </a>\r\n                        <a class=\"list-group-item list-group-item-action bg-light1  dropdown-btn2\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553103761", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            <h6>
                                TEST CASES
                            </h6>
                        </a>
                        <div class=""dropdown2-container"">
                            <div href=""#"" class="" list-group-item-action bg-light Admin color"" id=""MenuTestcases"">

                                <a href=""/Web/Web"" style=""        border-bottom: 1px solid 1px solid #ba9122;color: white"">WEB</a><br />
                                <a style=""        border-bottom: 1px solid 1px solid #ba9122;color: white"">API</a><br />
                                <a href=""/Home/Dbetl"" style=""        border-bottom: 1px solid 1px solid #ba9122;color: white"">ETL/DB</a><br />
                            </div>
                            <a href=""/DbConfig/RulesSet"" class=""list-group-item list-group-item-action bg-light Admin color"" id=""MenuEtlrules"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553105898", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <h6>ETL/RULES</h6>
                            </a>
                        </div>
                    </div>
                    <a href=""/Suites/Release"" class=""list-group-item list-group-item-action bg-light color"" id=""MenuRelease"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553107377", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        <h6>RELEASE</h6>\r\n                    </a>\r\n                    <a href=\"/Execution/Execute\" class=\"list-group-item list-group-item-action bg-light color\" id=\"MenuExecution\">\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553108790", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        <h6>EXECUTION</h6>\r\n                    </a>\r\n                    <a class=\"list-group-item list-group-item-action bg-light  dropdown-btn color\">\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553110170", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        <h6>
                            REPORTS
                        </h6>
                    </a>
                    <div class=""dropdown-container"" style=""        background-color: #A9A9A9 !important"">

                        <a href=""/Home/Report"" class=""list-group-item list-group-item-action bg-light  dropdown-btn color"" id=""MenuTestReport"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553111762", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            <h6>
                                TEST REPORT
                            </h6>
                        </a>
                        <a href=""http://52.178.152.165:8080/"" class=""list-group-item list-group-item-action bg-light  dropdown-btn color"" id=""MenuAnaltics"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553113274", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            <h6>
                                ANALYTICS
                            </h6>
                        </a>
                    </div>
                    <a class=""list-group-item list-group-item-action bg-light  dropdown-btn color"" id=""MenuUserMangment"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553114771", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        <h6>
                            USER MANAGEMENT
                        </h6>
                    </a>
                    <div class=""dropdown-container"" style="" background-color: #A9A9A9 !important"">

                        <a href=""/UserManagement/Employee"" class=""list-group-item list-group-item-action bg-light  dropdown-btn color"">

                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553116356", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            <h6>
                                USER
                            </h6>
                        </a>
                        <a href=""/UserManagement/UserRole"" class=""list-group-item list-group-item-action bg-light  dropdown-btn color"">

                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553117840", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            <h6>
                                USER ROLE
                            </h6>
                        </a>
                    </div>
                    <a href=""/Home/Index"" class=""list-group-item list-group-item-action bg-light color"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553119320", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        <h6>LOGOUT</h6>
                    </a>
                </div>
            </div>
            <!-- /#sidebar-wrapper -->
            <!-- Page Content -->


            <div id=""page-content-wrapper"" style=""        width: 100%;
        background-color: #d5d5d5"">

                <nav class=""navbar navbar-expand-lg navbar-light bg-light border-bottom"" style="" background-color: #261c1d !important;"">
                    <a id=""menu-toggle"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553121011", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </a>

                    <button class=""navbar-toggler"" type=""button"" data-toggle=""collapse"" data-target=""#navbarSupportedContent"" aria-controls=""navbarSupportedContent"" aria-expanded=""false"" aria-label=""Toggle navigation"">
                        <span class=""navbar-toggler-icon""></span>
                    </button>

                    <div class=""collapse navbar-collapse"" id=""navbarSupportedContent"">
                        <ul class=""navbar-nav ml-auto mt-2 mt-lg-0"">
                            <li class=""nav-item active"" style=""text-align:center"">
                                <a href=""#"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553122887", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    <p class=""nav-link"" style=""color: white;padding:unset"">Profile <span class=""sr-only"">(current)</span></p>
                                </a>

                            </li>
                            <li class=""nav-item"" style=""        text-align: center; padding-left: 15px;"">
                                <a href=""/Home/Index"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553124404", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    <p class=""nav-link"" style="" color: white;padding:unset"">Logout</p>
                                </a>

                            </li>

                        </ul>
                    </div>
                </nav>
                <h3 style=""        color: #ba9122; padding: 14px; margin-left: 42px;"">Test  Cases</h3>
                <div class=""container"" style="" background-color: white; padding-bottom: unset;"">
                    <div class="" container-scroller"">

                        <div class=""container-fluid page-body-wrapper"">

                            <div class=""main-panel"">
                                <div class=""content-wrapper"" style=""padding: 1.5rem .8rem .5rem 2rem;"">

                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec553126307", async() => {
                    WriteLiteral(@"
                                        <div class=""form"">
                                            <div class=""row"" style=""padding-bottom: 20px;"">
                                                <div class=""col-lg-3 col-md-3 col-xs-3 col-sm-3"" style=""text-align: left;"">
                                                    <label>Rule</label><br />
                                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec553126993", async() => {
                        WriteLiteral("\r\n                                                    ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 1499 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ProductId);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
#nullable restore
#line 1501 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(Model.Listofproducts,"Value", "Text"));

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                </div>
                                                <div class=""col-lg-3 col-md-3 col-xs-3 col-sm-3"" style=""text-align: left;"">
                                                    <label><span style=""color: red;"">* </span>Connections</label><br />

                                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec553129619", async() => {
                        WriteLiteral("\r\n                                                    ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 1507 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.TestsuidId);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
#nullable restore
#line 1509 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(Model.TestSuiteList,"Value", "Text"));

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                </div>\r\n");
                    WriteLiteral(@"                                                <div class=""col-lg-3 col-xs-3 col-md-3 col-xs-3"" style=""text-align: left;"">
                                                    <label>Name</label><span style=""color: red;"">*</span><br />
                                                    <input type=""text"" id=""Name"" name=""Name"" class=""txt-input form-control"" />
                                                </div>
");
                    WriteLiteral(@"                                            </div>
                                            <div class=""row"">
                                                <div class=""col-md-12 col-lg-12"">
                                                    <textarea type=""text"" disabled id=""Testrule"" class=""hidden form-control""></textarea>
                                                </div>
                                            </div>
                                            <div class=""row"">
                                                <div class=""col-md-12 col-lg-12"">
                                                    <div id=""TestCaseuppend"" class=""row""></div>
                                                </div>
                                            </div>

                                            <div class=""row"" style=""padding-bottom: 20px;"">

                                                <div class=""col-lg-3 col-lg-3 col-xs-6 col-sm-6"" style=""padding-top:1em;"">
        ");
                    WriteLiteral("                                            <label>Expected Result</label><br />\r\n");
                    WriteLiteral("                                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec553133722", async() => {
                        WriteLiteral("\r\n                                                    ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 1542 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ExpectedResultVal);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
#nullable restore
#line 1544 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(Model.ExpectedResult,"Value", "Text"));

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                </div>
                                                <div class=""col-lg-3 col-lg-3 col-xs-6 col-sm-6"" style=""padding-top:1em;"">
                                                    <div id=""ExpectedParameter""></div>
                                                </div>
                                                <div class=""col-lg-3 col-md-3 col-xs-3 col-sm-3"" style=""padding-top:1em;"">
                                                    <label>Description</label> <br />
                                                    <input type=""text"" class=""form-control"" maxlength=""50"" placeholder=""Description"" id=""Description"" />
                                                </div>
                                            </div>
                                            <div class=""row"">
                                                <div class=""col-lg-12 col-md-12"">
                                                    <textarea type=""text"" disab");
                    WriteLiteral(@"led id=""Testrulemodified"" class=""hidden form-control""></textarea>
                                                </div>
                                            </div>
                                            <input type=""hidden"" id=""Length"" />

                                            <div class=""row"" style=""padding-top: 1rem;"">

                                                <input type=""file"" name=""files"" multiple class=""button"" style="" box-shadow: unset; background: unset; background-color: unset; color: unset;padding-left:15px"" />

                                            </div>
                                            <div class=""row"">
                                                <div class=""col-lg-3 col-xs-12"" style=""padding-top:30px;"">
                                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("button", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec553137946", async() => {
                        WriteLiteral("Upload ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_29);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_30);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_31);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Controller = (string)__tagHelperAttribute_32.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_32);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Action = (string)__tagHelperAttribute_33.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_33);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                </div>\r\n                                                <div class=\"col-lg-3 col-xs-12\" style=\"padding-top:30px;\">\r\n\r\n                                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("button", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec553139987", async() => {
                        WriteLiteral(" Template");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_29);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_35);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_36);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Controller = (string)__tagHelperAttribute_32.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_32);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Action = (string)__tagHelperAttribute_37.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_37);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"

                                                </div>
                                            </div>

                                            <table id=""exampleimport"" border=""1"" style=""display:none; border:1px solid"">
                                                <thead class=""thead-bold"" style=""border: 1px solid black;"">
                                                    <tr style=""background-color: #BFD0D8 !important;"">
                                                        
                                                        <th class=""th-bold"">
                                                            Rule Name

                                                        </th>
                                                        <th class=""th-bold"">
                                                            Schema

                                                        </th>
                                                        <th class=""th-bold"">
              ");
                    WriteLiteral(@"                                              Table Name
                                                        </th>
                                                        <th class=""th-bold"">
                                                            Column Name

                                                        </th>
                                                        <th class=""th-bold"">
                                                        <th class=""th-bold"">

                                                            Value
                                                        </th>
                                                        <th class=""th-bold"">
                                                            Expected Result

                                                        </th>
                                                        <th class=""th-bold"">
                                                            Expected Value
                         ");
                    WriteLiteral(@"                               </th>
                                                    </tr>
                                                </thead>
                                                <tbody style=""border: 1px solid black;"">
                                                </tbody>
                                            </table>

                                        </div>
                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_38.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_38);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_39);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_40);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </div>


                            </div>
                        </div>


                    </div>
                </div>
                <div class=""container"" style=""        background-color: #eeeeee;
        padding: 10px;
        padding-bottom: unset;
        margin-top: 15px"">
                    <div class=""row"" style=""        padding: 10px
"">
                        <div class=""col-lg-6 col-dm-6 col-xs-6 col-sm-6"" style=""text-align:left"">
                            <input type=""checkbox"" id=""Status""> Set As active
                            <div class=""col-md-12 col-lg-12 col-xs-12 col-sm-12"">
                                <label style=""text-align:center;color:green "" id=""Success""></label>
                                <label style=""text-align:center;color:red "" id=""Error""></label>
                            </div>
                        </div>
                        <div class=""col-lg-6 col-dm-6 col-xs-6 col-sm-6"" style=""text-align");
                WriteLiteral(@":right"">
                            <input type=""button"" class=""text-center center-block"" style=""        color: white;background-color: #c9a642"" id=""Save"" value=""SAVE"">
                            <input type=""button"" class=""text-center center-block hidden"" style=""       color: white;background-color: #c9a642"" id=""Update"" value=""Update"">
                            <input type=""button"" class=""text-center center-block clear"" style=""   color: black;"" id=""Clear"" value=""Clear"">
                            <input type=""hidden"" id=""updateis"" />
                            <input type=""hidden"" id=""Etlstatus"" />
                        </div>

                    </div>
                </div>
                <div class=""container"" style=""        background-color: white;
        padding: 10px;
        padding-bottom: unset;
        margin-top: 15px"">

                    <div class=""container-fluid"" style=""        background-color: white;
        padding: 20px;
        padding-top: 15px;
        pad");
                WriteLiteral(@"ding-bottom: 100px;"">
                        <div class=""row"">
                            <div class=""col-lg-12 grid-margin"">
                                <div>
                                    <div>
                                        <div class=""row"">
                                            <div class=""col-12 "">
                                                <div");
                BeginWriteAttribute("class", " class=\"", 85463, "\"", 85471, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                                    <div");
                BeginWriteAttribute("class", " class=\"", 85531, "\"", 85539, 0);
                EndWriteAttribute();
                WriteLiteral(@" style=""        padding: 0;  overflow-y: scroll;"">
                                                        <div class=""col-lg-12 form-inline""
                                                             style=""border: 1px solid #9c9fa6; padding: 5px;background-color: #f0f0f1"">
                                                            <div class=""col-lg-3 col-md-3 col-xs-3 col-sm-3""></div>
                                                            <div class=""col-lg-12 col-md-12 col-xs-12 col-sm-12 "" style=""padding-right:0px;"">

                                                                <div style="" position: absolute;"">
                                                                    <div");
                BeginWriteAttribute("class", " class=\"", 86255, "\"", 86263, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                                        <input type=""text"" id=""search"" name=""search"" />
                                                                        <button id=""Searchlist"" class=""button"" style="" margin: unset;   background-color: #c9a642; margin-left: 10px"" value=""Search"">Search</button>
                                                                    </div>

                                                                </div>

                                                                <div class=""form-group"" style=""        position: absolute;right: 41%; width: 22%"">
");
                WriteLiteral(@"                                                                </div>


                                                                <div class=""form-group"" style=""padding-left:60%;"">
                                                                    <div class=""input-group"">
                                                                        <!-- <label style=""padding-right: 25px;"">Search</label> -->
");
                WriteLiteral("                                                                         ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec553150987", async() => {
                    WriteLiteral("\r\n                                                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 1696 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ProductSearchId);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
#nullable restore
#line 1698 "D:\Abinesh-learn\XAutomatetest\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(Model.ProductSearchList,"Value", "Text"));

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                                        <!-- <input type=""text"" class=""form-control""
                                                                            placeholder=""Search..."" aria-label=""Search...""
                                                                            aria-describedby=""basic-addon2"">
                                                                        <div class=""input-group-append"">
                                                                            <button class=""btn btn-sm btn-gradient-danger""
                                                                                type=""button"">Search</button>
                                                                        </div> -->
                                                                    </div>
                                                                    <div>
                                                                        <button id=""InActive"" ");
                WriteLiteral(@"OnClick='Bindrid(""0"")' class=""button"" style=""margin: unset; background-color: #c9a642;  margin-left: 10px;"" value=""Inactive"">
                                                                            Inactive
                                                                        </button>
                                                                        <button id=""Active"" OnClick='Bindrid(""1"")' class=""button hidden"" style="" margin: unset; background-color: #c9a642; margin-left: 10px"" value=""Active"">
                                                                            Active
                                                                        </button>
                                                                    </div>
");
                WriteLiteral("                                                                    <button type=\"button\" id=\"excel\" class=\"btn  btn-sm\">\r\n\r\n                                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2956b0961ba21df05c1dc32a6b32d232143ec553155310", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_41);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        </div>


                                                        <div class=""col-sm-12 mat-elevation-z8""
                                                             style=""box-shadow: unset;padding: 0px ;"">
                                                            <table id=""example"" class=""table table-hover"" style=""width: 100%;"" border=""1"">
                                                                <thead style="" background-color: gray; color: white;"">
                                                                    <tr>
                                                                        <td class=""th-bold"">
                                                                            Name

                      ");
                WriteLiteral(@"                                                  </td>
                                                                        <td style=""width:50px"">
                                                                            Rule Name
                                                                        </td>
");
                WriteLiteral(@"                                                                        <td style=""width:300px"">
                                                                            Description

                                                                        </td>
                                                                        <td style=""width:100px"">
                                                                            Test Data
                                                                        </td>
                                                                        <td style=""width:100px"">
                                                                            Expected Result

                                                                        </td>

                                                                        <td style=""width:50px"">
                                                                            Status
                                     ");
                WriteLiteral(@"                                   </td>
                                                                    </tr>
                                                                </thead>
                                                                <tbody id=""tblAuthgrid""></tbody>

                                                            </table>

                                                        </div>



                                                    </div>

                                                </div>
                                            </div>
                                            <div class=""col-lg-4""></div>
                                            <div class=""col-lg-4""></div>
                                            <div class=""col-lg-4"">
                                                <!-- <p class=""text-primary"" style=""float:right""><i>
                                                &nbsp;</i>Page 1,2,3,4<i>&nbsp;></i></p> -->
         ");
                WriteLiteral(@"                                   </div>

                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <!-- partial:../../partials/_footer.html -->

        </div>
    </div>

    </div>
    <!-- /#page-content-wrapper -->
    <!-- /#wrapper -->
    <!-- Bootstrap core JavaScript -->
    <script src=""http://52.178.152.165:5000/vendor/jquery/jquery.min.js""></script>
    <script src=""http://52.178.152.165:5000/vendor/bootstrap/js/bootstrap.bundle.min.js""></script>
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec553160686", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_42);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2956b0961ba21df05c1dc32a6b32d232143ec553161788", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_43);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n    <!-- Menu Toggle Script -->\r\n    <script>\r\n        $(\"#menu-toggle\").click(function (e) {\r\n            e.preventDefault();\r\n            $(\"#wrapper\").toggleClass(\"toggled\");\r\n        });\r\n    </script>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ProductViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
