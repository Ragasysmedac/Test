#pragma checksum "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Suites\Release.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "43624c022755f5337d6f69190a62356d95b0036f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Suites_Release), @"mvc.1.0.view", @"/Views/Suites/Release.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"43624c022755f5337d6f69190a62356d95b0036f", @"/Views/Suites/Release.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b3eb3a5bd4bb195597699a36c34031f9ee5ad7c0", @"/Views/_ViewImports.cshtml")]
    public class Views_Suites_Release : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ProductViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/ExportExcel.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("cursor: pointer;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 4 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Suites\Release.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "43624c022755f5337d6f69190a62356d95b0036f5254", async() => {
                WriteLiteral(@"
    <script>


        $(document).ready(function () {
            /* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */
            var dropdown = document.getElementsByClassName(""dropdown-btn"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }
            var dropdown = document.getElementsByClassName(""dropdown-btn2"");
            var i;

            for (i = 0; i < dropdown.length; i++");
                WriteLiteral(@") {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }
            debugger;
            $(""#ReleaseStatus"").val(""1"");
            var Active = 1;
            $(""#Status"").attr('checked', true);
            $(document).on(""click"", ""#ReleaseSave"", function () {
                $(""#Error"").html('');
                $(""#success"").html('');
                var ReleaseNo = $(""#RNo"").val();
                if (ReleaseNo == """" || ReleaseNo == null || ReleaseNo == ""undefined"" || ReleaseNo == undefined) {
                    $(""#Error"").html(""Please Enter Release No"");
                ");
                WriteLiteral(@"    return false;
                }
                var inValid = /\s/;
                if ((inValid.test(ReleaseNo))) {

                    $(""#Error"").html('Release No cannot contain whitespace');
                    return false;
                }
                var RName = $(""#RName"").val();
                if (RName == """" || RName == null || RName == ""undefined"" || RName == undefined) {
                    $(""#Error"").html(""Please Enter Release Name"");
                    return false;
                }
                var inValid = /\s/;
                if ((inValid.test(RName))) {

                    $(""#Error"").html('Release Name cannot contain whitespace');
                    return false;
                }
                if ($('#Status').is(':checked')) {
                    Active = 1;
                }
                else {
                    $(""#Error"").html(""Please Check Active Check box"");
                }
                $.ajax(
                    {
        ");
                WriteLiteral(@"                type: ""GET"", //HTTP POST Method
                        url: ""/Home/SaveRelease"", // Controller/View
                        datatype: ""json"",
                        data: { RNo: ReleaseNo, RName: RName, Status: Active },
                         headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                 return false;
                            }
                            var result = data;
                            if (result == ""Success"") {
                                $(""#success"").html(""Release No Successfully Saved"");
                                BindGrid1(1);
                        ");
                WriteLiteral(@"        clear();
                            }
                            else if (result == ""Fail"") {
                                $(""#Error"").html(""Already Release No  Exits"")
                                return false;
                            }


                            debugger;
                        },
                        error: function (Result) {
                        }

                    });
            });


            $(document).on(""click"", ""#update"", function () {
                debugger;
                $(""#Error"").html('');
                $(""#success"").html('');
                var ReleaseNo = $(""#RNo"").val();
                if (ReleaseNo == """" || ReleaseNo == null || ReleaseNo == ""undefined"" || ReleaseNo == undefined) {
                    $(""#Error"").html(""Please Enter Release No"");
                    return false;
                }

                var inValid = /\s/;
                if ((inValid.test(ReleaseNo))) {

                 ");
                WriteLiteral(@"   $(""#Error"").html('Release No cannot contain whitespace');
                    return false;
                }
                var RName = $(""#RName"").val();
                if (RName == """" || RName == null || RName == ""undefined"" || RName == undefined) {
                    $(""#Error"").html(""Please Enter Release Name"");
                    return false;
                }
                var inValid = /\s/;
                if ((inValid.test(RName))) {

                    $(""#Error"").html('Release Name cannot contain whitespace');
                    return false;
                }
                if ($('#Status').is(':checked')) {
                    Active = 1;
                }
                else {
                    Active = 0;
                }
                var releasenoId = $(""#ReleasenoId"").val();
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Suites/UpdatesRelease"", // Controller/View");
                WriteLiteral(@"
                        datatype: ""json"",
                        data: { RNo: ReleaseNo, RName: RName, Status: Active, ReleaseId: releasenoId },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            var result = data;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            if (result == ""Success"") {
                                $(""#success"").html(""Release No Successfully Updated"");
                                BindGrid1(1);
                                clear();
                            }
                            else if (result =");
                WriteLiteral(@"= ""Fail"") {
                                $(""#Error"").html(""Release No Updated Failes"")
                                return false;
                            }


                            debugger;
                        },
                        error: function (Result) {
                        }

                    });
            });
            $(document).on(""click"", ""#excel"", function () {
                var uri = 'data:application/vnd.ms-excel;base64,'
                    , template = '<html xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:x=""urn:schemas-microsoft-com:office:excel"" xmlns=""http://www.w3.org/TR/REC-html40""><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
                    , base64 = function (s) { return");
                WriteLiteral(@" window.btoa(unescape(encodeURIComponent(s))) }
                    , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }

                var table = document.getElementById(""example"");
                //var example1 = $('.example1');

                //var filters = $('.ng-table-filters').remove();
                var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML };
                //$('.ng-table-sort-header').after(filters);
                var url = uri + base64(format(template, ctx));
                var a = document.createElement('a');
                a.href = url;

                //var today = new Date();
                //var date = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();

                a.download = 'Release.xls';
                a.click();
            });
            $(document).on('click', '#Clear', function ");
                WriteLiteral(@"() {
                clear();
                $(""#Error"").html("""");
                $(""#Success"").html("""");
                var table = document.getElementById('example');
                var cells = table.getElementsByTagName('td');
                for (var i = 0; i < cells.length; i++) {
                    var rowsNotSelected = table.getElementsByTagName('tr');
                    for (var row = 0; row < rowsNotSelected.length; row++) {
                        rowsNotSelected[row].style.backgroundColor = """";
                        rowsNotSelected[row].classList.remove('highlight');
                    }
                }
            });
            function clear() {
                $(""#RNo"").val('');
                $(""#RName"").val('');
                $(""#ReleasenoId"").val('');
                $(""#ReleaseSave"").removeClass(""hidden"");
                $(""#update"").addClass(""hidden"");
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");");
                WriteLiteral(@"
                $(""#ReleaseStatus"").val(""1"");
            }
            BindGrid(1);
       

        });
        function display(a, val) {
            $(""#Error"").html('');
            $(""#success"").html('');
            $(""#ReleaseSave"").addClass(""hidden"");
            $(""#update"").removeClass(""hidden"");
            var table = document.getElementById('example');
            var cells = table.getElementsByTagName('td');
            for (var i = 0; i < cells.length; i++) {
                var rowsNotSelected = table.getElementsByTagName('tr');
                for (var row = 0; row < rowsNotSelected.length; row++) {
                    rowsNotSelected[row].style.backgroundColor = """";
                    rowsNotSelected[row].classList.remove('highlight');
                }
            }
            a.parentNode.classList.add(""highlight"");
            debugger;
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Suites/");
                WriteLiteral(@"EditReleaseno"", // Controller/View
                    datatype: ""json"",
                    data: { Release: val },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        var result = data;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $(""#RNo"").val(data[""0""].releaseNo1);
                        $(""#RName"").val(data[""0""].releaseName);
                        var status = data[""0""].status;
                        $(""#ReleasenoId"").val(data[""0""].releasenoId);
                        if (status == ""1"") {
                            $(""#Status"").prop(""checked"", true);
                        }
                        e");
                WriteLiteral(@"lse {
                            $(""#Status"").prop(""checked"", false);
                        }
                        debugger;

                    },
                    error: function (Result) {
                    }

                });
        }
        function BindGrid(active) {
            if (active == ""1"") {
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#ReleaseStatus"").val(""1"");
            }
            else {
                $(""#InActive"").addClass(""hidden"");
                $(""#Active"").removeClass(""hidden"");
                $(""#ReleaseStatus"").val(""0"");
            }
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Home/ReleaseBidGrid"", // Controller/View
                    datatype: ""json"",
                    data: { Statuss: active },
                    headers: {
                        ""Content-Type"": JSON,
     ");
                WriteLiteral(@"                   'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $('#tblAuthgrid').empty();
                        var tr;
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {

                                tr = $('<tr/>');
                                tr.append(""<td   OnClick='display(this,"" + data[i].releasenoId + "");'  style='    cursor: pointer;'>"" + data[i].releasenoId + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" + data[i].releasenoId + "");'  style='    cursor: pointer;'>"" + data[i].releaseNo1 + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" +");
                WriteLiteral(@" data[i].releasenoId + "");'  style='    cursor: pointer;'>"" + data[i].releaseName + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" + data[i].releasenoId + "");'  style='    cursor: pointer;'>"" + data[i].createdDate + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" + data[i].releasenoId + "");'  style='    cursor: pointer;'>"" + data[i].status + ""</td>"");
                                tr.append(""<td> <span  OnClick='deletefun("" + data[i].releasenoId + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http://40.115.111.12:5000/Image/delete-trash-icon-256.png' style='height:25px' />"" : """") + "" </span></td>"");
                                $('#tblAuthgrid').append(tr);
                            }
                        }
                        $('#example').DataTable({
                            paging: true,
                            scrollX: true,
                            lengthChange: true,");
                WriteLiteral(@"
                            searching: true,
                            ordering: false
                        });

                        debugger;
                    },
                    error: function (Result) {
                    }

                });
        }

        function BindGrid1(active) {
            if (active == ""1"") {
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#ReleaseStatus"").val(""1"");
            }
            else {
                $(""#InActive"").addClass(""hidden"");
                $(""#Active"").removeClass(""hidden"");
                $(""#ReleaseStatus"").val(""0"");
            }
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Home/ReleaseBidGrid"", // Controller/View
                    datatype: ""json"",
                    data: { Statuss: active },
                    headers: {
                        ""Co");
                WriteLiteral(@"ntent-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $('#tblAuthgrid').empty();
                        var tr;
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {

                                tr = $('<tr/>');
                                tr.append(""<td   OnClick='display(this,"" + data[i].releasenoId + "");'  style='    cursor: pointer;'>"" + data[i].releasenoId + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" + data[i].releasenoId + "");'  style='    cursor: pointer;'>"" + data[i].releaseName + ""</td>"");
                                tr.append(""<td  ");
                WriteLiteral(@" OnClick='display(this,"" + data[i].releasenoId + "");'  style='    cursor: pointer;'>"" + data[i].createdDate + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" + data[i].releasenoId + "");'  style='    cursor: pointer;'>"" + data[i].status + ""</td>"");
                                tr.append(""<td> <span  OnClick='deletefun("" + data[i].releasenoId + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http://40.115.111.12:5000/Image/delete-trash-icon-256.png' style='height:25px' />"" : """") + "" </span></td>"");
                                $('#tblAuthgrid').append(tr);
                            }
                        }
                    

                        debugger;
                    },
                    error: function (Result) {
                    }

                });
        }
        function deletefun(releaseid) {
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
      ");
                WriteLiteral(@"              url: ""/Home/deleteRelease"", // Controller/View
                    datatype: ""json"",
                    data: { releaseid: releaseid },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        debugger;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed"");
                            return false;
                        }

                        Bindrid1(1);
                    },
                    error: function (Result) {

                    }

                });
        }
    </script>
    <div>

                <h3 style=""        color: #ba9122; padding: 14px; margin-left: 42px;"">Release</h3>
                <div class=""container"" style="" background-color: white;  padding-bottom: unset;"">
              ");
                WriteLiteral(@"      <div class="" container-scroller"">

                        <div class=""container-fluid page-body-wrapper"">

                            <div class=""main-panel"">
                                <div class=""content-wrapper"" style=""padding: 1.5rem .8rem .5rem 2rem;"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "43624c022755f5337d6f69190a62356d95b0036f26416", async() => {
                    WriteLiteral(@"
                                        <div class=""form"">
                                            <div class=""row"" style=""padding-bottom: 20px;"">
                                                <div class=""col-lg-3 col-md-3 col-xs-5 col-sm-5"" style=""text-align: left;"">
                                                    <label><span style=""color: red;"">*</span>Release No</label><br />
                                                    <input type=""text"" id=""RNo"" name=""Name"" class=""txt-input form-control"" />
                                                </div>

                                                <div class=""col-lg-3 col-md-3 col-xs-5 col-sm-5"" style=""text-align: left;"">
                                                    <label><span style=""color: red;"">*</span>Release Name</label><br />
                                                    <input type=""text"" id=""RName"" name=""Name"" class=""txt-input form-control"" />
                                                </div>
         ");
                    WriteLiteral("                                   </div>\r\n\r\n                                        </div>\r\n                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </div>


                            </div>
                        </div>


                    </div>
                </div>
                <div class=""container"" style=""        background-color: #eeeeee;
        padding: 10px;
        padding-bottom: unset;
        margin-top: 15px"">
                    <div class=""row"" style=""        padding: 10px
"">
                        <div class=""col-lg-6 col-md-6 col-xs-6 col-sm-6"" style=""text-align:left"">
                            <input type=""checkbox"" id=""Status""> Set As active
                            <div class=""col-lg-12 col-md-12 col-xs-12 col-sm-12"">
                                <label id=""Error"" style=""color:red;text-align:center""></label>
                                <label id=""success"" style=""color:green;text-align:center""></label>
                            </div>
                        </div>
                        <div class=""col-lg-6 col-md-6 col-xs-6 col-sm-6"" style=""text-align:r");
                WriteLiteral(@"ight"">
                            <input type=""button"" class=""text-center center-block"" style=""        color: white;background-color: #c9a642"" id=""ReleaseSave"" value=""SAVE"">
                            <input type=""button"" class=""text-center center-block hidden"" style=""       color: white;background-color: #c9a642"" id=""update"" value=""Update"">
                            <input type=""button"" class=""text-center center-block clear"" style=""   color: black;"" id=""Clear"" value=""Clear"">
                            <input type=""hidden"" id=""ReleasenoId"" />
                            <input type=""hidden"" id=""ReleaseStatus"" />
                        </div>

                    </div>
                </div>
                <div class=""container"" style=""        background-color: white;

        padding-bottom: unset;
        margin-top: 15px"">

                    <div class=""container"" style=""     background-color: white;    padding: 44px; padding-top: 15px; padding-bottom: 100px;"">
                    ");
                WriteLiteral("    <div class=\"content\">\r\n                            <div class=\" container-scroller\">\r\n\r\n\r\n");
                WriteLiteral("                                <div class=\"form-group\" id=\"Excelpos\">\r\n\r\n\r\n                                    <button type=\"button\" class=\"btn  btn-sm\" id=\"excel\">\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "43624c022755f5337d6f69190a62356d95b0036f31794", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </button>
                                </div>
                                <div class=""row"" style=""margin-top:10px"">
                                    <div class=""col-sm-12 mat-elevation-z8""
                                         style=""box-shadow: unset;padding: 0px ;"" #TABLE>
                                        <table style=""width: 100%;"" border=""1"" id=""example"">
                                            <thead>
                                                <tr>
                                                    <td>
                                                        Release No Id
                                                    </td>
                                                    <td>
                                                        Release No
                                                    </td>
                                                    <td>
                                                        Rele");
                WriteLiteral(@"ase Name
                                                    </td>
                                                    <td>
                                                        Created Date
                                                    </td>
                                                    <td>
                                                        Status
                                                    </td>
                                                    <td>
                                                        Delete
                                                    </td>
                                                </tr>
                                            </thead>
                                            <tbody id=""tblAuthgrid"">
                                            </tbody>
                                        </table>

                                    </div>

                                </div>
                            </div>");
                WriteLiteral(@"
                            <!-- partial:../../partials/_footer.html -->

                        </div>


                    </div>

                </div>
                <!-- partial:../../partials/_footer.html -->

            </div>
        </div>

    </div>
    <!-- /#page-content-wrapper -->
    <!-- /#wrapper -->
    <!-- Bootstrap core JavaScript -->

    <!-- Menu Toggle Script -->
    <script>
        $(""#menu-toggle"").click(function (e) {
            e.preventDefault();
            $(""#wrapper"").toggleClass(""toggled"");
        });
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ProductViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
