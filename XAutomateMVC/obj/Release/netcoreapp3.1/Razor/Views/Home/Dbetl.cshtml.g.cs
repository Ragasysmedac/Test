#pragma checksum "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ab7d1fde4b8e54f6177a5a4948d83818a4f43ca2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Dbetl), @"mvc.1.0.view", @"/Views/Home/Dbetl.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\_ViewImports.cshtml"
using XAutomateMVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ab7d1fde4b8e54f6177a5a4948d83818a4f43ca2", @"/Views/Home/Dbetl.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b3eb3a5bd4bb195597699a36c34031f9ee5ad7c0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Dbetl : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ProductViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("submit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("button"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("color: white;background-color: #c9a642;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "ETLTestCASES", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("Id", new global::Microsoft.AspNetCore.Html.HtmlString("Templete"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("color: white;background-color: #c9a642"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" button text-center center-block"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "etldbtemplate", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formid"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/ExportExcel.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("cursor: pointer;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab7d1fde4b8e54f6177a5a4948d83818a4f43ca29246", async() => {
                WriteLiteral(@"
    <style>
        .dropdown1-container {
            display: block !important;
        }
        .dropdown3-container {
            display: block !important;
        }
    </style>
    <script>
        /* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */

        $(document).ready(function ($) {
            var dropdown = document.getElementsByClassName(""dropdown-btn"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                   ");
                WriteLiteral(@" }
                });
            }
            var dropdown = document.getElementsByClassName(""dropdown-btn1"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
                    if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }

            var dropdown = document.getElementsByClassName(""dropdown-btn2"");
            var i;

            for (i = 0; i < dropdown.length; i++) {
                dropdown[i].addEventListener(""click"", function () {
                    this.classList.toggle(""active"");
                    var dropdownContent = this.nextElementSibling;
    ");
                WriteLiteral(@"                if (dropdownContent.style.display === ""block"") {
                        dropdownContent.style.display = ""none"";
                    } else {
                        dropdownContent.style.display = ""block"";
                    }
                });
            }
            $(""#Etlstatus"").val(""1"");
            var option;
            option = $('<option/>');
            option.append(""<option value=''>Select Rule</option>"");
            var option1;
            option1 = $('<option/>');
            option1.append(""<option value=''>Select Rule</option>"");

            $('#RulesId').append(option1);
            // $('#selectrule').append(option);
            $(""#Status"").prop(""checked"", true);
            $(document).on(""change"", ""#ProductId"", function () {
                var SuiteName = $(""#ProductId"").val();

                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/RulesConfigset"", // Con");
                WriteLiteral(@"troller/View
                        datatype: ""json"",
                        data: {
                            SuiteId: SuiteName,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $('#RulesId').empty();
                            $(""#ExpectedResultVal"").val('');
                            $(""#TestCaseuppend"").empty();
                            $(""#Testrulemodified"").addClass(""hidden"");
                            $(""#Testrule"").addClass(""hidden"");
                            $(""#ExpectedParameter"").empty();
       ");
                WriteLiteral(@"                     $(""#selectrule"").empty();
                            $(""#Name"").val('');
                            $('#selectrule').empty();
                            var option1;
                            option1 = $('<option/>');
                            option1.append(""<option value='' disabled>Select Rules</option>"");
                            $('#selectrule').append(option1);
                            //  var option;
                            // option = $('<option/>');
                            for (var i = 0; i < data.length; i++) {

                                $(""#selectrule"").append(""<option value="" + data[i].rulesId + "">"" + data[i].ruleName + ""</option>"");
                                //  $('#selectrule').append(option);
                            }
                        },
                        error: function (Result) {
                        }

                    });

            });

            $(document).on(""change"", ""#ProductSearchId");
                WriteLiteral(@""", function () {
                $('#tblAuthgrid').empty();
                var SuiteName = $(""#ProductSearchId"").val();

                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/RulesConfigset"", // Controller/View
                        datatype: ""json"",
                        data: {
                            SuiteId: SuiteName,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $('#RulesId').empty();
                            var opti");
                WriteLiteral(@"on1;
                            option1 = $('<option/>');
                            option1.append(""<option value=''>Select Rules</option>"");
                            $('#RulesId').append(option1);
                            var option;
                            for (var i = 0; i < data.length; i++) {

                                $('#RulesId').append(""<option value="" + data[i].rulesId + "">"" + data[i].ruleName + ""</option>"");



                            }
                        },
                        error: function (Result) {
                            swal(""Error!"", ""Error."", ""error"");
                        }

                    });
            });
            $(document).on('change', '#ProductId', function () {
                debugger;
                var RuleId = $(""#ProductId"").val();

                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/RulesCondtions"", // Controller/Vi");
                WriteLiteral(@"ew
                        datatype: ""json"",
                        data: {
                            RulesId: RuleId,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $(""#TestCaseuppend"").empty();
                            $(""#Testrulemodified"").removeClass(""hidden"");
                            var option;
                            var div;
                            div = $('<div class=""row"">');
                            $(""#Length"").val(data[""0""].ruleParameter);
        ");
                WriteLiteral(@"                    if (data.length > 0) {
                                for (var i = 0; i < data[""0""].ruleParameter; i++) {
                                    $(""#Testrule"").removeClass(""hidden"");
                                    $(""#Testrule"").val(data[""0""].ruleCondtion);

                                    $(""#Testrulemodified"").val(data[""0""].ruleCondtion);

                                    //div.append('<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>Parameter ' + [i] + '</label><br/>'
                                    //    +' <input type=""text"" id=""parameter' + [i] + '"" name=""testdata"" class=""txt-input form-control"" />  </div> </div> ');

                                    var LabelName = (data[""0""].label[i].parameterName).toLowerCase();

                                    var DBpara = '<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>' + data[""0""].label[i].parameterName + '[' + i + ']</label><br/>';
                                    if (LabelName !=");
                WriteLiteral(@" ""schema"" && LabelName != ""table_name"" && LabelName != ""column_name"") {
                                        DBpara += ' <input class=""form-control parameters""  id=""parameter' + [i] + '"" placeholder=""Values"" />';
                                    }
                                    else {
                                        DBpara += ' <select class=""form-control parameters""  id=""parameter' + [i] + '""><option disabled selected>Select Parameter </option></select>'

                                    }
                                    DBpara += '</div> ';
                                    $(""#TestCaseuppend"").append(DBpara);
                                    for (var k = 0; k < data[""0""].parameter.length; k++) {
                                        $(""#parameter"" + [i]).append(""<option value="" + data[""0""].parameter[k].tablecolumn1 + "" style='color: "" + data[""0""].parameter[k].color + ""' >"" + data[""0""].parameter[k].tablecolumn1 + ""</option>"");
                                    }");
                WriteLiteral(@"


                                }
                            }

                        },
                        error: function (Result) {
                            swal(""Error!"", ""Error."", ""error"");
                        }

                    });
            });

            $(document).on(""change"", ""#ProductSearchId"", function () {
                debugger;
                var rulename = $(""#ProductSearchId"").val();
                var Status = $(""#Etlstatus"").val();
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/Bindgridrule"", // Controller/View
                        datatype: ""json"",
                        data: {
                            Rules: rulename,
                            status: Status,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getI");
                WriteLiteral(@"tem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $('#tblAuthgrid').empty();
                            var tr;
                            if (data.length > 0) {
                                for (var i = 0; i < data.length; i++) {
                                    var parameters = """";
                                    var testda = data[i].testdata.split("",,,"");
                                    for (var j = 0; j < testda.length; j++) {

                                        if (parameters == """") {
                                            parameters = testda[j];
                                        }
                                        ");
                WriteLiteral(@"else {
                                            parameters += "","" + testda[j];
                                        }

                                    }
                                    tr = $('<tr/>');
                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCasesId + ""'>"" + data[i].testCasesId + ""</td>"");
                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCaseName + ""'>"" + data[i].testCaseName + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCasesId + ""'>"" + data[i].ruleName + ""</td>"");
                                    // tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 5");
                WriteLiteral(@"0px' >"" + data[i].testApproachName + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].description + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'  >"" + parameters + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].exceptedResult + ""</td>"");

                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].status + ""</td>"");
                                    tr.append(""<td> <span  OnClick='deletefun("" + data[i].testCasesId + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http://40.115.111.12:5000/Image/delete-trash-icon-256.png' style");
                WriteLiteral(@"='height:25px' />"" : """") + "" </span></td>"");
                                    $('#tblAuthgrid').append(tr);
                                }
                            }
                        },
                        error: function (Result) {

                        }

                    });
            });


            $(document).on(""change"", ""#TestsuidId"", function () {
                $(""#Error"").html("""");
                var rule = $(""#ProductId"").val();
                if (rule == null || rule == """") {
                    $(""#Error"").html(""Please Select Rule "");
                    return false;
                }

                var Connection = $(this).val();
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/Connectionchange"", // Controller/View
                        datatype: ""json"",
                        data: {
                            connections: Connection,
   ");
                WriteLiteral(@"                         rules: rule,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $(""#ProductId"").val(data[""0""].rulesId);
                            var RuleID = String(data[""0""].rulesId);
                            debugger;
                            $(""#TestCaseuppend"").empty();
                            for (var i = 0; i < data[""0""].ruleParameter; i++) {
                                $(""#Testrule"").removeClass(""hidden"");
                                $(""#Testrule"").val(");
                WriteLiteral(@"data[""0""].ruleCondtion);

                                $(""#Testrulemodified"").val(data[""0""].ruleCondtion);

                                //div.append('<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>Parameter ' + [i] + '</label><br/>'
                                //    +' <input type=""text"" id=""parameter' + [i] + '"" name=""testdata"" class=""txt-input form-control"" />  </div> </div> ');

                                var LabelName = (data[""0""].labelName[i].parameterName).toLowerCase();

                                var DBpara = '<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>' + data[""0""].labelName[i].parameterName + '[' + i + ']</label><br/>';
                                if (LabelName != ""schema"" && LabelName != ""table_name"" && LabelName != ""column_name"") {
                                    DBpara += ' <input class=""form-control parameters""  id=""parameter' + [i] + '"" placeholder=""Values"" />';
                                }
                          ");
                WriteLiteral(@"      else {
                                    DBpara += ' <select class=""form-control parameters""  id=""parameter' + [i] + '""><option disabled selected>Select Parameter </option></select>'

                                }
                                DBpara += '</div> ';
                                $(""#TestCaseuppend"").append(DBpara);
                                for (var k = 0; k < data[""0""].parameter.length; k++) {
                                    $(""#parameter"" + [i]).append(""<option value="" + data[""0""].parameter[k].tablecolumn1 + "" style='color: "" + data[""0""].parameter[k].color + ""' >"" + data[""0""].parameter[k].tablecolumn1 + ""</option>"");
                                }


                            }
                        },
                        error: function (Result) {

                        }

                    });
            });

            $(document).on(""click"", ""#Save"", function () {

                $(""#Error"").html('');
                $(""#Su");
                WriteLiteral(@"ccess"").html('');
                var Active = 1;
                //var Rule = $(""#selectrule"").val();
                //if (Rule == null || Rule == """" || Rule == undefined || Rule == ""0"") {
                //    $(""#Error"").html(""Please Select on Rule"");
                //    return false;
                //}
                var DemoName = $(""#ProductId"").val();
                if (DemoName == null || DemoName == """" || DemoName == undefined) {
                    $(""#Error"").html(""Please Select Rule"");
                    return false;
                }
                var Name = $(""#Name"").val();
                if (Name == null || Name == """" || Name == undefined) {
                    $(""#Error"").html(""Please Enter Name"");
                    return false;
                }

                var connection = $(""#TestsuidId"").val();
                if (connection == null && connection == """" && connection == undefined) {
                    $(""#Error"").html(""Please Select Connection"");
  ");
                WriteLiteral(@"                  return false;
                }
                var parameter;
                var lenthcount = $(""#Length"").val();
                for (var i = 0; i < lenthcount; i++) {
                    if (parameter == null || parameter == """" || parameter == undefined) {
                        parameter = $(""#parameter"" + i + """").val();
                    }
                    else {
                        parameter = parameter + "",,,"" + $(""#parameter"" + i + """").val();
                    }

                }

                var testRule = $(""#Testrule"").val();

                var Except = $(""#ExpectedResultVal"").val();
                if (Except == null || Except == '' || Except == undefined) {
                    $(""#Error"").html(""Please Select Expected Result"");
                    return false;
                }
                var Exceptvalue = """";
                if (Except == ""Row Count Is Equal To X"" || Except == ""Row Count Is Greater Than X"" || Except == ""Row Count I");
                WriteLiteral(@"s Less Than X"") {
                    Exceptvalue = $(""#Expectedvalue"").val();

                    if (Exceptvalue == null || Exceptvalue == """" || Exceptvalue == undefined) {
                        $(""#Error"").html(""Please Expected Values"");
                        return false;
                    }
                    Except = Except.slice(0, -1);
                }

                var des = $(""#Description"").val();
                if ($('#Status').is(':checked')) {
                    Active = 1;
                }
                else {
                    $(""#Error"").html(""Please Check Active Check box"");
                    return false;
                }
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/SaveGrid"", // Controller/View
                        datatype: ""json"",
                        data: {
                            // Rules: Rule,
                            Name: Name,
 ");
                WriteLiteral(@"                           SuiteName: DemoName,
                            Except: Except,
                            Parameter: parameter,
                            testRule: testRule,
                            Description: des,
                            status: Active,
                            ExpectedValue: Exceptvalue,
                            connection: connection,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            //   $(""#selectrule"").val('');
                            var option1;
                   ");
                WriteLiteral(@"         option1 = $('<option/>');
                            option1.append(""<option value=''>Select Rule</option>"");
                            //$('#selectrule').append(option1);
                            $(""#Name"").val('');
                            $(""#ProductId"").val('');
                            Bindrid1(""1"");
                            $(""#ExpectedResultVal"").val('');
                            $(""#TestCaseuppend"").empty();
                            $(""#TestsuidId"").val('');
                            $(""#Description"").val("""");
                            $(""#Testrule"").addClass(""hidden"");
                            //  $(""#selectrule"").empty();
                            $(""#Success"").html(""Successfully Saved Test Case"");
                            $(""#ExpectedParameter"").empty();
                        },
                        error: function (Result) {

                        }

                    });
            });

            $(document).on(""click"", """);
                WriteLiteral(@".rules"", function () {
                debugger;
                $(""#Update"").removeClass(""hidden"");

                $(""#Save"").addClass(""hidden"");
                var testcaseid = $(this).val();
                $(""#updateis"").val(testcaseid);
                var rule = $(""#"" + testcaseid).val();
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/EditGrid"", // Controller/View
                        datatype: ""json"",
                        data: {
                            test: testcaseid,
                            rules: rule,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
        ");
                WriteLiteral(@"                        $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $(""#ProductId"").val(data[""0""].rulesId);
                            var RuleID = String(data[""0""].rulesId);
                            debugger;
                            //$.ajax(
                            //    {
                            //        type: ""GET"", //HTTP POST Method
                            //        url: ""/Home/RulesConfigset"", // Controller/View
                            //        datatype: ""json"",
                            //        data: {
                            //            SuiteId: data[""0""].testApproachid,
                            //        },
                            //        success: function (data) {
                            //            debugger;
                            //            var option;
                            //            $(""#sel");
                WriteLiteral(@"ectrule"").empty();
                            //            for (var i = 0; i < data.length; i++) {
                            //                option = $('<option/>');
                            //                option.append(""<option value="" + data[i].rulesId + "">"" + data[i].ruleName + ""</option>"");



                            //                $('#selectrule').append(option);

                            //            }
                            //            $(""#selectrule"").val(RuleID);
                            //        },
                            //        error: function (Result) {

                            //        }

                            //    });

                            $(""#Name"").val(data[""0""].testCaseName);
                            //  $(""#ProductId"").val(data[""0""].testApproachid);
                            $(""#TestResult"").val(data[""0""].exceptedResult);
                            $(""#TestCaseuppend"").empty();
                           ");
                WriteLiteral(@" $(""#Testrulemodified"").removeClass(""hidden"");
                            var option;
                            var div;
                            div = $('<div class=""row"">');
                            $(""#Length"").val(data[""0""].ruleParameter);

                            var datalis = data[""0""].testdata.split("","");;
                            if (data.length > 0) {
                                for (var i = 0; i < data[""0""].ruleParameter; i++) {
                                    $(""#Testrule"").removeClass(""hidden"");
                                    $(""#Testrule"").val(data[""0""].ruleCondtion);
                                    $(""#Testrulemodified"").val(data[""0""].ruleCondtion);

                                    //div.append('<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>Parameter ' + [i] + '</label><br/><input type = ""text"" id = ""parameter' + [i] + '"" value=' + datalis[i] + ' name = ""testdata"" class= ""txt-input form-control"" />  </div> </div>  ');




    ");
                WriteLiteral(@"                                //$(""#TestCaseuppend"").append(div);

                                    $(""#TestCaseuppend"").append('<div class=""col-lg-3""  style=""padding-bottom: 20px;""> <label>' + data[""0""].labelName[i].parameterName + '</label><br/>'
                                        + ' <select class=""form-control""  id=""parameter' + [i] + '""><option disabled>Select Parameter </option>' +
                                        '</select>  </div> </div> ');
                                    for (var k = 0; k < data[""0""].parameter.length; k++) {
                                        $(""#parameter"" + [i]).append(""<option value="" + data[""0""].parameter[k].tablecolumn1 + "" style='color: "" + data[""0""].parameter[k].color + ""' >"" + data[""0""].parameter[k].tablecolumn1 + ""</option>"");

                                    }
                                    $(""#parameter"" + [i]).val(datalis[i]);

                                }
                            }
                        },
     ");
                WriteLiteral(@"                   error: function (Result) {

                        }

                    });
            });

            $(document).on(""click"", ""#excel"", function () {
                var uri = 'data:application/vnd.ms-excel;base64,'
                    , template = '<html xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:x=""urn:schemas-microsoft-com:office:excel"" xmlns=""http://www.w3.org/TR/REC-html40""><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
                    , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
                    , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }

                var table = document.getElementById(""example"");
           ");
                WriteLiteral(@"     //var example1 = $('.example1');

                //var filters = $('.ng-table-filters').remove();
                var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML };
                //$('.ng-table-sort-header').after(filters);
                var url = uri + base64(format(template, ctx));
                var a = document.createElement('a');
                a.href = url;

                //var today = new Date();
                //var date = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();

                a.download = 'TestCase.xls';
                a.click();
            });
            $(document).on('click', '#Clear', function () {
                clear();
                $(""#Error"").html('');
                $(""#Success"").html('');
                var table = document.getElementById('example');
                var cells = table.getElementsByTagName('td');
 ");
                WriteLiteral(@"               for (var i = 0; i < cells.length; i++) {
                    var rowsNotSelected = table.getElementsByTagName('tr');
                    for (var row = 0; row < rowsNotSelected.length; row++) {
                        rowsNotSelected[row].style.backgroundColor = """";
                        rowsNotSelected[row].classList.remove('highlight');
                    }
                }
                $(""#ExpectedParameter"").empty();
            });

            function clear() {
                $(""#Name"").val('');
                $(""#ProductId"").val('');
                $(""#ExpectedResultVal"").val('');
                $(""#Testrule"").addClass(""hidden"");
                $(""#updateis"").val("""");
                $(""#Description"").val("""");
                $(""#testsuitestatus"").val(""1"");
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                Bindrid1(""1"");
                $(""#TestsuidId"").val("""");
                var tab");
                WriteLiteral(@"le = document.getElementById('example');
                var cells = table.getElementsByTagName('td');
                for (var i = 0; i < cells.length; i++) {
                    var rowsNotSelected = table.getElementsByTagName('tr');
                    for (var row = 0; row < rowsNotSelected.length; row++) {
                        rowsNotSelected[row].style.backgroundColor = """";
                        rowsNotSelected[row].classList.remove('highlight');
                    }
                }
                $(""#TestCaseuppend"").empty();
                $(""#Testrulemodified"").addClass(""hidden"");
                $(""#Update"").addClass(""hidden"");
                $(""#Save"").removeClass(""hidden"");
            }

            $(document).on(""click"", ""#Update"", function () {
                debugger;
                $(""#Error"").html('');
                $(""#Success"").html('');
                var Active = 1;
                //var Rule = $(""#selectrule"").val();
                //if (Rule == nu");
                WriteLiteral(@"ll && Rule == """" && Rule == undefined) {
                //    $(""#Error"").html(""Please Select on Rule"");
                //    return false;
                //}
                var DemoName = $(""#ProductId"").val();
                if (DemoName == null && DemoName == """" && DemoName == undefined) {
                    $(""#Error"").html(""Please Select Rule Name"");
                    return false;
                }

                var Name = $(""#Name"").val();
                if (Name == null && Name == """" && Name == undefined) {
                    $(""#Error"").html(""Please Enter Name"");
                    return false;
                }
                var connection = $(""#TestsuidId"").val();
                if (connection == null && connection == """" && connection == undefined) {
                    $(""#Error"").html(""Please Select Connection"");
                    return false;
                }
                var parameter;
                var lenthcount = $(""#Length"").val();
          ");
                WriteLiteral(@"      for (var i = 0; i < lenthcount; i++) {
                    if (parameter == null || parameter == """" || parameter == undefined) {
                        parameter = $(""#parameter"" + i + """").val();
                    }
                    else {
                        parameter = parameter + "",,,"" + $(""#parameter"" + i + """").val();
                    }

                }

                var testRule = $(""#Testrule"").val();

                var Except = $(""#ExpectedResultVal"").val();
                if (Except == null && Except == '' && Except == undefined) {
                    $(""#Error"").html(""Please Select Expected Result"");
                    return false;
                }
                var Exceptvalue = """";
                if (Except == ""Row Count Is Equal To X"" || Except == ""Row Count Is Greater Than X"" || Except == ""Row Count Is Less Than X"") {
                    Exceptvalue = $(""#Expectedvalue"").val();

                    if (Exceptvalue == null || Exceptvalue == """" ");
                WriteLiteral(@"|| Exceptvalue == undefined) {
                        $(""#Error"").html(""Please Expected Values"");
                        return false;
                    }
                    Except = Except.slice(0, -1);
                }
                var TeId = $(""#updateis"").val();
                if ($('#Status').is(':checked')) {
                    Active = 1;
                }
                else {
                    Active = 0;
                }
                var des = $(""#Description"").val();
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/UpdateGrid"", // Controller/View
                        datatype: ""json"",
                        data: {
                            // Rules: Rule,
                            Name: Name,
                            SuiteName: DemoName,
                            Except: Except,
                            Parameter: parameter,
                           ");
                WriteLiteral(@" testRule: testRule,
                            testcaseid: TeId,
                            status: Active,
                            Describtion: des,
                            Exceptvalues: Exceptvalue,
                            connection: connection,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $(""#Name"").val('');
                            $(""#ProductId"").val('');
                            $(""#ExpectedResultVal"").val('');
                            $(""#Testrule"").");
                WriteLiteral(@"addClass(""hidden"");
                            $(""#updateis"").val("""");
                            $(""#Description"").val("""");
                            $(""#Update"").addClass(""hidden"");
                            $(""#TestsuidId"").val('');
                            $(""#Save"").removeClass(""hidden"");
                            $(""#selectrule"").empty();
                            $(""#ExpectedParameter"").empty();
                            var option1;
                            option1 = $('<option/>');
                            option1.append(""<option value=''>Select Rule</option>"");
                            $('#selectrule').append(option1);
                            $(""#TestCaseuppend"").empty();
                            $(""#Testrulemodified"").addClass(""hidden"");
                            Bindrid1(""1"");
                            $(""#Success"").html(""Successfully Updated Test Case"");
                        },
                        error: function (Result) {

           ");
                WriteLiteral(@"             }

                    });
            });

            $(""#Update"").addClass(""hidden"");
            $(""#Save"").removeClass(""hidden"");
            var Oldvalues;
            $(document).on(""click"", "".parameters"", function () {

                Oldvalues = $(this).val();


            });
            $(document).on(""change"", "".parameters"", function () {
                debugger;
                var values = $(this).val();
                var Id = $(this).attr('id');
                Id = Id.replaceAll('parameter', '');
                var rules = $(""#Testrulemodified"").val();
                if (Oldvalues == null || Oldvalues == """") {
                    rules = rules.replaceAll(""["", """");
                    rules = rules.replaceAll(""]"", """");
                    rules = rules.replaceAll(Id, values);
                }
                else {

                    rules = rules.replaceAll(Oldvalues, values);
                }

                $(""#Testrulemodified"").val(rul");
                WriteLiteral(@"es);
            });

            $(document).on(""change"", ""#ExpectedResultVal"", function () {
                debugger;
                $(""#ExpectedParameter"").empty();
                var Expected = $(this).val();
                if (Expected == ""Row Count Is Equal To X"" || Expected == ""Row Count Is Greater Than X"" || Expected == ""Row Count Is Less Than X"") {
                    $(""#ExpectedParameter"").append(""<label>Expected Parameter</label><input type='text'  class='form-control' Id='Expectedvalue' />"")
                }
            });

            //SearchList

            $(document).on(""click"", ""#Searchlist"", function () {
                debugger;
                var searchres = $(""#search"").val();
                var statsu = $(""#Etlstatus"").val();
                $.ajax(
                    {
                        type: ""GET"", //HTTP POST Method
                        url: ""/Home/SearchBindGrid"", // Controller/View
                        datatype: ""json"",
               ");
                WriteLiteral(@"         data: {
                            search: searchres,
                            status: statsu,
                        },
                        headers: {
                            ""Content-Type"": JSON,
                            'Authorization': localStorage.getItem(""AuthoToken""),
                        },
                        success: function (data) {
                            debugger;
                            if (data == ""Auth Fail"") {
                                $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                                return false;
                            }
                            $('#tblAuthgrid').empty();
                            var tr;
                            if (data.length > 0) {
                                for (var i = 0; i < data.length; i++) {

                                    var testda = data[i].testdata.split("",,,"");
                                    var parameters = """";
        ");
                WriteLiteral(@"                            for (var j = 0; j < testda.length; j++) {

                                        if (parameters == """") {
                                            parameters = testda[j];
                                        }
                                        else {
                                            parameters += "","" + testda[j];
                                        }

                                    }
                                    tr = $('<tr/>');
                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCaseName + ""'>"" + data[i].testCaseName + ""</td>"");
                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCasesId + ""'>"" + data[i].ruleName + ""</td>"");
                                    //    tr.append(""<td  OnClick='displa");
                WriteLiteral(@"y(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].testApproachName + ""</td>"");
                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'>"" + data[i].description + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + parameters + ""</td>"");
                                    tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].exceptedResult + ""</td>"");

                                    tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'  >Active</td>"");
                                    tr.append(""<td> <span  OnClick='deletefun("" + data[i].testCasesId + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http:");
                WriteLiteral(@"//40.115.111.12:5000/Image/delete-trash-icon-256.png' style='height:25px' />"" : """") + "" </span></td>"");
                                    $('#tblAuthgrid').append(tr);
                                }

                            }

                        },
                        error: function (Result) {

                        }

                    });
            });
            $('#formid').on('keyup keypress', function (e) {
                var keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    return false;
                }
            });

            Bindrid(""1"");


        });

        function Bindrid(Active) {
            if (Active == ""1"") {
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#Etlstatus"").val(""1"");
            }
            else {
                $(""#InActive"").addClass(""hidden"");
          ");
                WriteLiteral(@"      $(""#Active"").removeClass(""hidden"");
                $(""#Etlstatus"").val(""0"");
            }
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Home/ETLBindGrid"", // Controller/View
                    datatype: ""json"",
                    data: { status: Active },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        debugger;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        $('#tblAuthgrid').empty();
                        var tr;
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {");
                WriteLiteral(@"
                                var parameters = """";
                                tr = $('<tr/>');
                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCaseName + ""'>"" + data[i].testCasesId + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCaseName + ""'>"" + data[i].testCaseName + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCasesId + ""'>"" + data[i].ruleName + ""</td>"");
                                //  tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].testApproachName + ""</td>"");

                                var testdatas = data[i].testdata.split("",,,"");");
                WriteLiteral(@"
                                for (var j = 0; j < testdatas.length; j++) {
                                    if (parameters == """") {
                                        parameters = testdatas[j];
                                    }
                                    else {
                                        parameters += "","" + testdatas[j];
                                    }

                                }

                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'>"" + data[i].description + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + parameters + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].exceptedResult + ""</td>"");

                                tr.append(""<");
                WriteLiteral(@"td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'  >"" + data[i].status + ""</td>"");
                                tr.append(""<td> <span  OnClick='deletefun("" + data[i].testCasesId + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http://40.115.111.12:5000/Image/delete-trash-icon-256.png' style='height:25px' />"" : """") + "" </span></td>"");
                                $('#tblAuthgrid').append(tr);
                            }
                            $('#example').DataTable({
                                paging: true,
                                scrollX: true,
                                lengthChange: true,
                                searching: true,
                                ordering: false
                            });
                        }

                    },
                    error: function (Result) {

                    }

                });
        }


        ");
                WriteLiteral(@"function Bindrid1(Active) {
            if (Active == ""1"") {
                $(""#InActive"").removeClass(""hidden"");
                $(""#Active"").addClass(""hidden"");
                $(""#Etlstatus"").val(""1"");
            }
            else {
                $(""#InActive"").addClass(""hidden"");
                $(""#Active"").removeClass(""hidden"");
                $(""#Etlstatus"").val(""0"");
            }
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Home/ETLBindGrid"", // Controller/View
                    datatype: ""json"",
                    data: { status: Active },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        debugger;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authenti");
                WriteLiteral(@"cation Failed,Your Session Failed"");
                            return false;
                        }
                        $('#tblAuthgrid').empty();
                        var tr;
                        if (data.length > 0) {
                            for (var i = 0; i < data.length; i++) {
                                var parameters = """";
                                tr = $('<tr/>');
                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCasesId + ""'>"" + data[i].testCasesId + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCaseName + ""'>"" + data[i].testCaseName + ""</td>"");
                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' value='"" + data[i].testCasesId + ");
                WriteLiteral(@"""'>"" + data[i].ruleName + ""</td>"");
                                //  tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].testApproachName + ""</td>"");

                                var testdatas = data[i].testdata.split("",,,"");
                                for (var j = 0; j < testdatas.length; j++) {
                                    if (parameters == """") {
                                        parameters = testdatas[j];
                                    }
                                    else {
                                        parameters += "","" + testdatas[j];
                                    }

                                }

                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'>"" + data[i].description + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId");
                WriteLiteral(@" + "");'  style='    cursor: pointer;width: 50px' >"" + parameters + ""</td>"");
                                tr.append(""<td  OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px' >"" + data[i].exceptedResult + ""</td>"");

                                tr.append(""<td   OnClick='display(this,"" + data[i].testCasesId + "");'  style='    cursor: pointer;width: 50px'  >"" + data[i].status + ""</td>"");
                                tr.append(""<td> <span  OnClick='deletefun("" + data[i].testCasesId + "");'  style='cursor: pointer;'>  "" + (data[i].status == ""Inactive"" ? ""<img src='http://40.115.111.12:5000/Image/delete-trash-icon-256.png' style='height:25px' />"" : """") + "" </span></td>"");
                                $('#tblAuthgrid').append(tr);
                            }

                        }

                    },
                    error: function (Result) {

                    }

                });
        }

        function deletefun(testid) {");
                WriteLiteral(@"
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Home/deleteetldb"", // Controller/View
                    datatype: ""json"",
                    data: { testcaseid: testid },
                    headers: {
                        ""Content-Type"": JSON,
                        'Authorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        debugger;
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed"");
                            return false;
                        }

                        Bindrid1(1);
                    },
                    error: function (Result) {

                    }

                });
        }
        function display(a, val) {
            debugger;
            $(""#ExpectedParameter"").empty();
            $(""#Error"").html("""");
    ");
                WriteLiteral(@"        $(""#Success"").html("""");
            $(""#Save"").addClass(""hidden"");
            $(""#Update"").removeClass(""hidden"");
            var table = document.getElementById('example');
            var cells = table.getElementsByTagName('td');
            for (var i = 0; i < cells.length; i++) {
                var rowsNotSelected = table.getElementsByTagName('tr');
                for (var row = 0; row < rowsNotSelected.length; row++) {
                    rowsNotSelected[row].style.backgroundColor = """";
                    rowsNotSelected[row].classList.remove('highlight');
                }
            }
            a.parentNode.classList.add(""highlight"");
            $.ajax(
                {
                    type: ""GET"", //HTTP POST Method
                    url: ""/Home/Editdbetl"", // Controller/View
                    datatype: ""json"",
                    data: { dbetlId: val },
                    headers: {
                        ""Content-Type"": JSON,
                        'A");
                WriteLiteral(@"uthorization': localStorage.getItem(""AuthoToken""),
                    },
                    success: function (data) {
                        if (data == ""Auth Fail"") {
                            $(""#Error"").html(""Authentication Failed,Your Session Failed"");
                            return false;
                        }
                        var result = data;
                        $(""#updateis"").val(data[""0""].testCasesId)
                        $(""#ProductId"").val(data[""0""].rulesId);
                        $(""#TestsuidId"").val(data[""0""].connection);
                        var RuleID = (data[""0""].rulesId);
                        $(""#Description"").val(data[""0""].description);
                        //$.ajax(
                        //    {
                        //        type: ""GET"", //HTTP POST Method
                        //        url: ""/Home/RulesConfigset"", // Controller/View
                        //        datatype: ""json"",
                        //        data: ");
                WriteLiteral(@"{
                        //            SuiteId: data[""0""].testApproachid,
                        //        },
                        //        headers: {
                        //            ""Content-Type"": JSON,
                        //            'Authorization': localStorage.getItem(""AuthoToken""),
                        //        },
                        //        success: function (data) {

                        //            var option;
                        //            $(""#selectrule"").empty();
                        //            var option1;
                        //            option1 = $('<option/>');
                        //            option1.append(""<option value=''>Select Rules</option>"");
                        //            $('#selectrule').append(option1);
                        //            for (var i = 0; i < data.length; i++) {
                        //                option = $('<option/>');
                        //                $('#selectrule')");
                WriteLiteral(@".append(""<option value="" + data[i].rulesId + "">"" + data[i].ruleName + ""</option>"");

                        //            }
                        //            $('#selectrule').val(RuleID);
                        //        },
                        //        error: function (Result) {

                        //        }

                        //    });
                        var Exxpectedparameter = data[""0""].expextedparameter;
                        var result = data[""0""].exceptedResult;
                        $(""#ExpectedParameter"").empty();
                        if (Exxpectedparameter != null && Exxpectedparameter != """") {
                            result = result.slice(0, -1);
                            result = result + ""X"";
                            $(""#ExpectedParameter"").append(""<label>Expected Parameter</label><input type='text' class='form-control' Id='Expectedvalue' value='"" + Exxpectedparameter + ""' />"")
                        }
                        $(""#Name");
                WriteLiteral(@""").val(data[""0""].testCaseName);
                        // $(""#ProductId"").val(data[""0""].testApproachid);
                        $(""#ExpectedResultVal"").val(result);
                        $(""#TestCaseuppend"").empty();

                        var option;
                        var div;
                        div = $('<div class=""row"">');
                        $(""#Length"").val(data[""0""].ruleParameter);
                        var condition = data[""0""].ruleCondtion
                        var datalis = data[""0""].testdata.split("",,,"");;
                        $(""#TestCaseuppend"").empty();
                        if (data.length > 0) {
                            for (var i = 0; i < data[""0""].ruleParameter; i++) {
                                $(""#Testrule"").removeClass(""hidden"");
                                $(""#Testrulemodified"").removeClass('hidden');
                                $(""#Testrule"").val(data[""0""].ruleCondtion);
                                //div.append('<div clas");
                WriteLiteral(@"s=""col-lg-3""  style=""padding-bottom: 20px;""> <label>Parameter ' + [i] + '</label><br/><input type = ""text"" id = ""parameter' + [i] + '"" value=""' + datalis[i] + '"" name = ""testdata"" class= ""txt-input form-control"" />  </div> </div>  ');


                                debugger;

                                //$(""#TestCaseuppend"").append(div);

                                var LabelName = (data[""0""].labelName[i].parameterName).toLowerCase();

                                var DBpara = '<div class=""col-lg-3""  style=""padding-top: 20px;padding-bottom: 20px;""> <label>' + data[""0""].labelName[i].parameterName + '[' + i + '] </label><br/>';
                                if (LabelName != ""schema"" && LabelName != ""table_name"" && LabelName != ""column_name"") {
                                    DBpara += ' <input class=""form-control parameters""  id=""parameter' + [i] + '"" placeholder=""Values"" />';
                                }
                                else {
                            ");
                WriteLiteral(@"        DBpara += ' <select class=""form-control parameters""  id=""parameter' + [i] + '""><option disabled selected>Select Parameter </option></select>'

                                }
                                DBpara += '</div> ';
                                //    var testcas = data[""0""].testcase.
                                $(""#TestCaseuppend"").append(DBpara);
                                for (var k = 0; k < data[""0""].parameter.length; k++) {
                                    $(""#parameter"" + [i]).append(""<option value="" + data[""0""].parameter[k].tablecolumn1 + "" style='color: "" + data[""0""].parameter[k].color + ""' >"" + data[""0""].parameter[k].tablecolumn1 + ""</option>"");
                                }

                                debugger;


                                $(""#parameter"" + [i]).val(datalis[i]);
                                //  condition = condition.replaceAll(""["", """");
                                // condition = condition.replaceAll(""]"", """");
  ");
                WriteLiteral(@"                              condition = condition.replaceAll(""["" + i + ""]"", datalis[i]);

                            }
                            $(""#Testrulemodified"").val(condition);
                        }



                        var status = data[""0""].status;
                        if (status == ""1"") {
                            $(""#Status"").prop(""checked"", true);
                        }
                        else {
                            $(""#Status"").prop(""checked"", false);
                        }
                        debugger;

                    },
                    error: function (Result) {
                    }

                });
        }

    </script>
    <div>



        <h3 style=""        color: #ba9122; padding: 14px; margin-left: 42px;"">Test  Cases</h3>
        <div class=""container"" style="" background-color: white; padding-bottom: unset;"">
            <div class="" container-scroller"">

                <div class=""container-fluid ");
                WriteLiteral("page-body-wrapper\">\r\n\r\n                    <div class=\"main-panel\">\r\n                        <div class=\"content-wrapper\" style=\"padding: 1.5rem .8rem .5rem 2rem;\">\r\n\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab7d1fde4b8e54f6177a5a4948d83818a4f43ca274870", async() => {
                    WriteLiteral(@"
                                <div class=""form"">
                                    <div class=""row"" style=""padding-bottom: 20px;"">
                                        <div class=""col-lg-3 col-md-3 col-xs-3 col-sm-3"" style=""text-align: left;"">
                                            <label>Rule</label><br />
                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab7d1fde4b8e54f6177a5a4948d83818a4f43ca275515", async() => {
                        WriteLiteral("\r\n                                            ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 1209 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ProductId);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
#nullable restore
#line 1211 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(Model.Listofproducts,"Value", "Text"));

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                        </div>
                                        <div class=""col-lg-3 col-md-3 col-xs-3 col-sm-3"" style=""text-align: left;"">
                                            <label><span style=""color: red;"">* </span>Connections</label><br />

                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab7d1fde4b8e54f6177a5a4948d83818a4f43ca278125", async() => {
                        WriteLiteral("\r\n                                            ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 1217 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.TestsuidId);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
#nullable restore
#line 1219 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(Model.TestSuiteList,"Value", "Text"));

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                        </div>\r\n");
                    WriteLiteral(@"                                        <div class=""col-lg-3 col-xs-3 col-md-3 col-xs-3"" style=""text-align: left;"">
                                            <label>Name</label><span style=""color: red;"">*</span><br />
                                            <input type=""text"" id=""Name"" name=""Name"" class=""txt-input form-control"" />
                                        </div>
");
                    WriteLiteral(@"                                    </div>
                                    <div class=""row"">
                                        <div class=""col-md-12 col-lg-12"">
                                            <textarea type=""text"" disabled id=""Testrule"" class=""hidden"" style=""width:100%""></textarea>
                                        </div>
                                    </div>
                                    <div class=""row"">
                                        <div class=""col-md-12 col-lg-12"">
                                            <div id=""TestCaseuppend"" class=""row""></div>
                                        </div>
                                    </div>


                                    <div class=""row"" style=""padding-bottom: 20px;"">

                                        <div class=""col-lg-3 col-lg-3 col-xs-6 col-sm-6"" style=""padding-top:1em;"">
                                            <label>Expected Result</label><br />
");
                    WriteLiteral("                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab7d1fde4b8e54f6177a5a4948d83818a4f43ca282053", async() => {
                        WriteLiteral("\r\n                                            ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 1253 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ExpectedResultVal);

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
#nullable restore
#line 1255 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(Model.ExpectedResult,"Value", "Text"));

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                        </div>
                                        <div class=""col-lg-3 col-lg-3 col-xs-6 col-sm-6"" style=""padding-top:1em;"">
                                            <div id=""ExpectedParameter""></div>
                                        </div>
                                        <div class=""col-lg-3 col-md-3 col-xs-3 col-sm-3"" style=""padding-top:1em;"">
                                            <label>Description</label> <br />
                                            <input type=""text"" class=""form-control"" maxlength=""50"" placeholder=""Description"" id=""Description"" />
                                        </div>
                                    </div>
                                    <div class=""row"">
                                        <div class=""col-lg-12 col-md-12"">
                                            <textarea disabled id=""Testrulemodified"" class="" hidden"" style=""width:100%"">




</textarea>
                        ");
                    WriteLiteral(@"                </div>
                                    </div>
                                    <input type=""hidden"" id=""Length"" />

                                    <div class=""row"" style=""padding-top: 1rem;"">

                                        <input type=""file"" name=""files"" multiple class=""button"" style="" box-shadow: unset; background: unset; background-color: unset; color: unset;padding-left:15px"" />

                                    </div>
                                    <div class=""row"">
                                        <div class=""col-lg-3 col-xs-12"" style=""padding-top:30px;"">
                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("button", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab7d1fde4b8e54f6177a5a4948d83818a4f43ca286130", async() => {
                        WriteLiteral("Upload ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Controller = (string)__tagHelperAttribute_4.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Action = (string)__tagHelperAttribute_5.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                        </div>\r\n                                        <div class=\"col-lg-3 col-xs-12\" style=\"padding-top:30px;\">\r\n\r\n                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("button", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab7d1fde4b8e54f6177a5a4948d83818a4f43ca288139", async() => {
                        WriteLiteral(" Template");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Controller = (string)__tagHelperAttribute_4.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_FormActionTagHelper.Action = (string)__tagHelperAttribute_9.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"

                                        </div>
                                    </div>

                                    <table id=""exampleimport"" border=""1"" style=""display:none; border:1px solid"">
                                        <thead class=""thead-bold"" style=""border: 1px solid black;"">
                                            <tr style=""background-color: #BFD0D8 !important;"">

                                                <th class=""th-bold"">
                                                    Rule Name

                                                </th>
                                                <th class=""th-bold"">
                                                    Schema

                                                </th>
                                                <th class=""th-bold"">
                                                    Table Name
                                                </th>
                                               ");
                    WriteLiteral(@" <th class=""th-bold"">
                                                    Column Name

                                                </th>
                                                <th class=""th-bold"">
                                                <th class=""th-bold"">

                                                    Value
                                                </th>
                                                <th class=""th-bold"">
                                                    Expected Result

                                                </th>
                                                <th class=""th-bold"">
                                                    Expected Value
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody style=""border: 1px solid black;"">
                                        </tbody>
 ");
                    WriteLiteral("                                   </table>\r\n\r\n                                </div>\r\n                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_10.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </div>


                    </div>
                </div>


            </div>
        </div>
        <div class=""container"" style=""        background-color: #eeeeee;
        padding: 10px;
        padding-bottom: unset;
        margin-top: 15px"">
            <div class=""row"" style=""        padding: 10px
"">
                <div class=""col-lg-6 col-dm-6 col-xs-6 col-sm-6"" style=""text-align:left"">
                    <input type=""checkbox"" id=""Status""> Set As active
                    <div class=""col-md-12 col-lg-12 col-xs-12 col-sm-12"">
                        <label style=""text-align:center;color:green "" id=""Success""></label>
                        <label style=""text-align:center;color:red "" id=""Error""></label>
                    </div>
                </div>
                <div class=""col-lg-6 col-dm-6 col-xs-6 col-sm-6"" style=""text-align:right"">
                    <input type=""button"" class=""text-center center-block"" style=""        color: white;backgrou");
                WriteLiteral(@"nd-color: #c9a642"" id=""Save"" value=""SAVE"">
                    <input type=""button"" class=""text-center center-block hidden"" style=""       color: white;background-color: #c9a642"" id=""Update"" value=""Update"">
                    <input type=""button"" class=""text-center center-block clear"" style=""   color: black;"" id=""Clear"" value=""Clear"">
                    <input type=""hidden"" id=""updateis"" />
                    <input type=""hidden"" id=""Etlstatus"" />
                </div>

            </div>
        </div>
        <div class=""container"" style=""        background-color: white;
        padding: 10px;
        padding-bottom: unset;
        margin-top: 15px"">

            <div class=""container-fluid"" style=""        background-color: white;
        padding: 20px;
        padding-top: 15px;
        padding-bottom: 100px;"">
                <div class=""row"">
                    <div class=""col-lg-12 grid-margin"">
                        <div>
                            <div>
                   ");
                WriteLiteral("             <div class=\"row\">\r\n                                    <div class=\"col-12 \">\r\n                                        <div");
                BeginWriteAttribute("class", " class=\"", 72409, "\"", 72417, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                            <div");
                BeginWriteAttribute("class", " class=\"", 72469, "\"", 72477, 0);
                EndWriteAttribute();
                WriteLiteral(@" style=""        padding: 0;"">
                                                <div class=""col-lg-12 form-inline""
                                                     style="" padding: 5px;"">
                                                    <div class=""col-lg-3 col-md-3 col-xs-3 col-sm-3""></div>
                                                    <div class=""col-lg-12 col-md-12 col-xs-12 col-sm-12 "" style=""padding-right:0px;"">

");
                WriteLiteral("\r\n");
                WriteLiteral(@"

                                                        <div class=""form-group"" style=""        padding-left: 55%;"">
                                                            <div class=""input-group"">
                                                                <!-- <label style=""padding-right: 25px;"">Search</label> -->
");
                WriteLiteral("                                                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab7d1fde4b8e54f6177a5a4948d83818a4f43ca297398", async() => {
                    WriteLiteral("\r\n                                                                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 1412 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ProductSearchId);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
#nullable restore
#line 1414 "D:\Abinesh\Xautomatedocker\Xautomate_docker\XAutomateMVC\XAutomateMVC\Views\Home\Dbetl.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(Model.ProductSearchList,"Value", "Text"));

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                                <!-- <input type=""text"" class=""form-control""
                                                                    placeholder=""Search..."" aria-label=""Search...""
                                                                    aria-describedby=""basic-addon2"">
                                                                <div class=""input-group-append"">
                                                                    <button class=""btn btn-sm btn-gradient-danger""
                                                                        type=""button"">Search</button>
                                                                </div> -->
                                                            </div>


                                                    <button type=""button"" class=""btn  btn-sm"" id=""excel"">
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "ab7d1fde4b8e54f6177a5a4948d83818a4f43ca2100617", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                    </button>\r\n");
                WriteLiteral(@"                                                        </div>
                                                    </div>
                                                </div>
                                             

                                                <div class=""col-sm-12 mat-elevation-z8""
                                                     style=""box-shadow: unset;padding: 0px ;"">
                                                    <table id=""example"" class=""table table-hover"" style=""width: 100%;"" border=""1"">
                                                        <thead style="" background-color: gray; color: white;"">
                                                            <tr>
                                                                <td class=""th-bold"">
                                                                    TC Id

                                                                </td>
                                                                <t");
                WriteLiteral(@"d class=""th-bold"">
                                                                    Name

                                                                </td>
                                                                <td style=""width:50px"">
                                                                    Rule Name
                                                                </td>
");
                WriteLiteral(@"                                                                <td style=""width:300px"">
                                                                    Description

                                                                </td>
                                                                <td style=""width:100px"">
                                                                    Test Data
                                                                </td>
                                                                <td style=""width:100px"">
                                                                    Expected Result

                                                                </td>

                                                                <td style=""width:50px"">
                                                                    Status
                                                                </td>
                                                      ");
                WriteLiteral(@"          <td>
                                                                    Delete
                                                                </td>
                                                            </tr>
                                                        </thead>
                                                        <tbody id=""tblAuthgrid""></tbody>

                                                    </table>

                                                </div>



                                            </div>

                                        </div>
                                    </div>
                                    <div class=""col-lg-4""></div>
                                    <div class=""col-lg-4""></div>
                                    <div class=""col-lg-4"">
                                        <!-- <p class=""text-primary"" style=""float:right""><i>
                                        &nbsp;</i>Page 1,2,3,4<i>&nbsp;></i></");
                WriteLiteral(@"p> -->
                                    </div>

                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!-- partial:../../partials/_footer.html -->
    </div>
    </div>

    </div>
    <!-- /#page-content-wrapper -->
    <!-- /#wrapper -->
    <!-- Bootstrap core JavaScript -->
    <!-- Menu Toggle Script -->
    <script>
        $(""#menu-toggle"").click(function (e) {
            e.preventDefault();
            $(""#wrapper"").toggleClass(""toggled"");
        });
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ProductViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
