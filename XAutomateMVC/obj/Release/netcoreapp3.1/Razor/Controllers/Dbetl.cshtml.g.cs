#pragma checksum "D:\Abinesh-learn\XAutomateMVC\XAutomateMVC\Controllers\Dbetl.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "301304486852d3dc8c56c8c9119a1ce8f047418f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Controllers_Dbetl), @"mvc.1.0.view", @"/Controllers/Dbetl.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"301304486852d3dc8c56c8c9119a1ce8f047418f", @"/Controllers/Dbetl.cshtml")]
    public class Controllers_Dbetl : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Abinesh-learn\XAutomateMVC\XAutomateMVC\Controllers\Dbetl.cshtml"
  
    ViewData["Title"] = "etl";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<!-- Bootstrap CSS CDN -->
<link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"" integrity=""sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4"" crossorigin=""anonymous"">

<script defer src=""https://use.fontawesome.com/releases/v5.0.13/js/solid.js"" integrity=""sha384-tzzSw1/Vo+0N5UhStP3bvwWPq+uvzCMfrN1fEFe+xBmv1C/AtVX5K0uZtmcHitFZ"" crossorigin=""anonymous""></script>
<script defer src=""https://use.fontawesome.com/releases/v5.0.13/js/fontawesome.js"" integrity=""sha384-6OIrr52G08NpOFSZdxxz1xdNSndlD4vdcf/q2myIUVO0VsqaGHJsB0RaBE01VTOY"" crossorigin=""anonymous""></script>

<!-- jQuery CDN - Slim version (=without AJAX) -->
<script src=""https://code.jquery.com/jquery-3.3.1.slim.min.js"" integrity=""sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"" crossorigin=""anonymous""></script>
<!-- Popper.JS -->
<script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"" integrity=""sha384-cs/chFZiN24E4KMATLdqd");
            WriteLiteral(@"vsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ"" crossorigin=""anonymous""></script>
<!-- Bootstrap JS -->
<script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"" integrity=""sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm"" crossorigin=""anonymous""></script>
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">

<!DOCTYPE html>
<html>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "301304486852d3dc8c56c8c9119a1ce8f047418f4437", async() => {
                WriteLiteral("\r\n\r\n    ");
#nullable restore
#line 23 "D:\Abinesh-learn\XAutomateMVC\XAutomateMVC\Controllers\Dbetl.cshtml"
Write(ViewData["Demo"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <style>
        thead {
            background-color: gray;
            color: white;
        }
        tr {
            height: 26px;
            text-align: center;
        }
        body {
            margin: 0;
            font-family: ""Lato"", sans-serif;
        }

        .sidebar {
            margin: 0;
            padding: 0;
            width: 200px;
            background-color: #f1f1f1;
            position: fixed;
            height: 100%;
            overflow: auto;
        }

            .sidebar a {
                display: block;
                color: black;
                padding: 16px;
                text-decoration: none;
            }

        div.content {
            margin-left: 200px;
            padding: 1px 16px;
            height: 1000px;
        }

        .sidenav {
            height: 100%;
            width: 200px;
            position: fixed;
        ");
                WriteLiteral(@"    z-index: 1;
            top: 0;
            left: 0;
            background-color: #111;
            overflow-x: hidden;
            padding-top: 20px;
        }

            /* Style the sidenav links and the dropdown button */
            .sidenav a, .dropdown-btn {
                padding: 6px 8px 6px 16px;
                text-decoration: none;
                font-size: 20px;
                color: #818181;
                display: block;
                border: none;
                background: none;
                width: 100%;
                text-align: left;
                cursor: pointer;
                outline: none;
            }

        /* On mouse-over */


        /* Main content */
        .main {
            margin-left: 200px; /* Same as the width of the sidenav */
            font-size: 20px; /* Increased text to enable scrolling */
            padding: 0px 10px;
        }

        /* Add an active class to the active dropdown button */

        /*");
                WriteLiteral(@" Dropdown container (hidden by default). Optional: add a lighter background color and some left padding to change the design of the dropdown content */
        .dropdown-container {
            display: none;
            padding-left: 31px;
        }

        /* Optional: Style the caret down icon */
        .fa-caret-down {
            float: right;
            padding-right: 8px;
        }
    </style>
    <script>
        /* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */
        var dropdown = document.getElementsByClassName(""dropdown-btn"");
        var i;

        for (i = 0; i < dropdown.length; i++) {
            dropdown[i].addEventListener(""click"", function () {
                this.classList.toggle(""active"");
                var dropdownContent = this.nextElementSibling;
                if (dropdownContent.style.display === ""block"") {
                    dropdow");
                WriteLiteral("nContent.style.display = \"none\";\r\n                } else {\r\n                    dropdownContent.style.display = \"block\";\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n    </script>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "301304486852d3dc8c56c8c9119a1ce8f047418f9033", async() => {
                WriteLiteral(@"


    <div class=""content"">
        .<div class="" container-scroller"">

            <div class=""container-fluid page-body-wrapper"">

                <div class=""main-panel"">
                    <div class=""content-wrapper"" style=""padding: 1.5rem .8rem .5rem 2rem;"">
                        <div class=""page-header"">
                            <h2 class=""page-title text-primary"">ETL / DB</h2>
                        </div>

                        <div class=""form"">
                            <div class=""row"" style=""padding-bottom: 20px;"">
                                <div class=""col-lg-3"">
                                    <label>Suite</label><br />
                                                             <select asp-for=""ProductId""
                                                                     class=""form-control""");
                BeginWriteAttribute("asp-items", "\r\n                                                                     asp-items=\"", 5685, "\"", 5822, 1);
#nullable restore
#line 155 "D:\Abinesh-learn\XAutomateMVC\XAutomateMVC\Controllers\Dbetl.cshtml"
WriteAttributeValue("", 5767, new SelectList(Model.Listofproducts,"Value", "Text"), 5767, 55, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@">
                                                             </select>
                                </div>
                                <div class=""col-lg-3"" style=""text-align: left;"">
                                    <label>Name</label><span style=""color: red;"">*</span><br />
                                    <input type=""text"" id=""Name"" name=""Name"" class=""txt-input"" />
                                </div>

                            </div>
                            <div class=""row"" style=""padding-bottom: 20px;"">
                                <div class=""col-lg-3"">
                                    <label>Test Case</label><br />
                                    <input type=""text"" id=""testcase"" name=""Testcases"" class=""txt-input"" />
                                </div> 
                               
                            </div>



                            <div class=""row"" style=""padding-bottom: 20px;"">
                                <div class=""col-lg-");
                WriteLiteral(@"3"">
                                    <label>Test Data</label><br />
                                    <input type=""text"" id=""testdata"" name=""testdata"" class=""txt-input"" />
                                </div>
                                <div class=""col-lg-3"">
                                    <label>Test Result</label><br />
                                    <input type=""text"" id=""TestResult"" name=""testresult"" class=""txt-input"" />
                                </div>
                            </div>
                            <div class=""row"">
                                <div class=""col-lg-5"" style=""padding-top:1em;"">
                                    <label>Description</label> <br />
                                    <textarea cols=""40"" rows=""3"" id=""Description"" [(ngModel)]=""Description"" class=""txt-input""></textarea>
                                </div>
                                <div class=""col-lg-3"" style=""padding-top: 4rem;"" [hidden]=""isShownActive"">
     ");
                WriteLiteral(@"                               <input type=""checkbox"" id=""Status"" [(ngModel)]=""Status""> Set As Inactive
                                </div>
                                <div class=""col-lg-4"" style=""padding-top: 4rem;"">
                                    <button class=""bttn-save "" [hidden]=""isShownSaveBtn"">SAVE</button> &nbsp;&nbsp;
                                    <button class=""bttn-Update"" (click)=""UpdatePort()"" [hidden]=""isShownUpdateBtn"">Update</button>&nbsp;&nbsp;
                                    <button class=""bttn-clear"" (click)=""ClearPort()"">Clear</button>
                                </div>
                            </div>


                        </div>
                    </div>


                </div>
            </div>
            <div class=""row"">
                <div class=""col-md-12"">
                    <div class="" col-md-6"">
                        <select class=""form-control"" id=""SuiteName"">
                            <option selected>zapatadb</opti");
                WriteLiteral("on>\r\n                        </select>\r\n\r\n\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        d     <a");
                BeginWriteAttribute("href", " href=\'", 9043, "\'", 9080, 1);
#nullable restore
#line 216 "D:\Abinesh-learn\XAutomateMVC\XAutomateMVC\Controllers\Dbetl.cshtml"
WriteAttributeValue("", 9050, Url.Action("Trigger", "Home"), 9050, 30, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@">
                            demo
                            Trigger
                        </a>
                        <button class=""bttn-save "" action=""url"" id=""Trigger"">Trigger</button> &nbsp;&nbsp;
                    </div>
                </div>
            </div>
            <div>

                <div class=""content-wrapper"">

                    <div class=""row"">
                        <div class=""col-lg-12 grid-margin"">
                            <div class=""card"">
                                <div class=""card-body"">
                                    <div class=""row"">
                                        <div class=""col-12 grid-margin"">
                                            <div class=""card"">
                                                <div class=""card-body"" style=""padding: 0;"">
                                                    <div class=""col-lg-12 form-inline""
                                                         style=""border: 1px solid #9c9fa6; ");
                WriteLiteral(@"padding: 5px;background-color: #f0f0f1"">
                                                        <div class=""col-lg-4""></div>
                                                        <div class=""col-lg-8 "" style=""padding-right:0px;"">
                                                            <div class=""form-group"" style=""padding-left:55%;"">
                                                                <div class=""input-group"">
                                                                    <!-- <label style=""padding-right: 25px;"">Search</label> -->
                                                                    <select class=""form-control"">
                                                                        <option");
                BeginWriteAttribute("value", " value=\"", 10851, "\"", 10859, 0);
                EndWriteAttribute();
                WriteLiteral(@">Search By</option>
                                                                    </select>
                                                                    <!-- <input type=""text"" class=""form-control""
                                                                        placeholder=""Search..."" aria-label=""Search...""
                                                                        aria-describedby=""basic-addon2"">
                                                                    <div class=""input-group-append"">
                                                                        <button class=""btn btn-sm btn-gradient-danger""
                                                                            type=""button"">Search</button>
                                                                    </div> -->
                                                                </div>
                                                                <button type=""button"" class=""btn btn-sm");
                WriteLiteral(@" "">
                                                                    <img src=""../../assets/ExportPDF.png"" />
                                                                </button>
                                                                <button type=""button"" class=""btn  btn-sm"">
                                                                    <img src=""../../assets/ExportExcel.png""
                                                                         (click)=""exportexcel()"" style=""cursor: pointer;"" />
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>


                                                    <div class=""col-sm-12 mat-elevation-z8""
                                                         style=""box-shadow: unset;padding: 0px ;"" #TABLE>
                    ");
                WriteLiteral(@"                                    <table style=""width: 100%;"" border=""1"">
                                                            <thead>
                                                                <tr>
                                                                    <td>
                                                                        S.no
                                                                    </td>
                                                                    <td>
                                                                        Name
                                                                    </td>
                                                                    <td>
                                                                        Case
                                                                    </td>
                                                                    <td>
                                                     ");
                WriteLiteral(@"                   Suite
                                                                    </td>
                                                                    <td>
                                                                        Data
                                                                    </td>
                                                                    <td>
                                                                        Expected Result

                                                                    </td>
                                                                    <td>
                                                                        Status
                                                                    </td>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                 ");
                WriteLiteral(@"                                               <tr>
                                                                    <td>
                                                                    </td>
                                                                </tr>
                                                            </tbody>
                                                        </table>

                                                    </div>



                                                </div>

                                            </div>
                                        </div>
                                        <div class=""col-lg-4""></div>
                                        <div class=""col-lg-4""></div>
                                        <div class=""col-lg-4"">
                                            <!-- <p class=""text-primary"" style=""float:right""><i>
                                            &nbsp;</i>Page 1,2,3,4<i>&nbsp;></i></p> --");
                WriteLiteral(@">
                                        </div>

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <!-- partial:../../partials/_footer.html -->

            </div>
        </div>
    </div>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
